<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><head><!--NewPage--><!-- Generated by javadoc on Wed Jan 30 05:35:51 PST 2002 --><title>Socket (Java 2 Platform SE v1.4.0)</title>


<link rel="stylesheet" type="text/css" href="overview-frame_data/stylesheet.css" title="Style">
<script>
function asd()
{
parent.document.title="Socket (Java 2 Platform SE v1.4.0)";
}
</script></head>



<body onload="asd();" bgcolor="white">

<!-- ========== START OF NAVBAR ========== -->
<a name="navbar_top"><!-- --></a>
<table border="0" cellpadding="1" cellspacing="0" width="100%">
<tbody><tr>
<td colspan="3" class="NavBarCell1" bgcolor="#eeeeff">
<a name="navbar_top_firstrow"><!-- --></a>
<table border="0" cellpadding="0" cellspacing="3">
  <tbody><tr align="center" valign="top">
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td>
  <td class="NavBarCell1Rev" bgcolor="#ffffff"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/class-use/Socket.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/index-files/index-1.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td>
  </tr>
</tbody></table>
</td>
<td rowspan="3" align="right" valign="top"><em>
<b>Java<sup><font size="-2">TM</font></sup>&nbsp;2&nbsp;Platform<br>Std.&nbsp;Ed. v1.4.0</b></em>
</td>
</tr>

<tr>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
&nbsp;<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html"><b>PREV CLASS</b></a>&nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html"><b>NEXT CLASS</b></a></font></td>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
  <a href="file:///D:/progettodireti/api/index.html" target="_top"><b>FRAMES</b></a>  &nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/Socket.html" target="_top"><b>NO FRAMES</b></a>  &nbsp;
&nbsp;
<script>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</script>
<noscript>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</noscript>
</font></td>
</tr>
<tr>
<td class="NavBarCell3" valign="top"><font size="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td>
<td class="NavBarCell3" valign="top"><font size="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td>
</tr>
</tbody></table>
<!-- =========== END OF NAVBAR =========== -->

<hr>
<!-- ======== START OF CLASS DATA ======== -->
<h2>
<font size="-1">
java.net</font>
<br>
Class  Socket</h2>
<pre><a href="file:///D:/progettodireti/api/java/lang/Object.html">java.lang.Object</a>
  |
  +--<b>java.net.Socket</b>
</pre>
<dl>
<dt><b>Direct Known Subclasses:</b> </dt><dd><a href="file:///D:/progettodireti/api/javax/net/ssl/SSLSocket.html">SSLSocket</a></dd>
</dl>
<hr>
<dl>
<dt>public class <b>Socket</b></dt><dt>extends <a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></dt></dl>

<p>
This class implements client sockets (also called just
 "sockets"). A socket is an endpoint for communication
 between two machines.
 </p><p>
 The actual work of the socket is performed by an instance of the
 <code>SocketImpl</code> class. An application, by changing
 the socket factory that creates the socket implementation,
 can configure itself to create sockets appropriate to the local
 firewall.
</p><p>

</p><p>
</p><dl>
<dt><b>Since:</b></dt><dd>JDK1.0</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSocketImplFactory%28java.net.SocketImplFactory%29"><code>setSocketImplFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/nio/channels/SocketChannel.html"><code>SocketChannel</code></a></dd></dl>
<hr>

<p>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<a name="constructor_summary"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="2"><font size="+2">
<b>Constructor Summary</b></font></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28%29">Socket</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an unconnected socket, with the
 system-default type of SocketImpl.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28java.net.InetAddress,%20int%29">Socket</a></b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;address,
       int&nbsp;port)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a stream socket and connects it to the specified port
 number at the specified IP address.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28java.net.InetAddress,%20int,%20boolean%29">Socket</a></b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;host,
       int&nbsp;port,
       boolean&nbsp;stream)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Deprecated.</b>&nbsp;<i>Use DatagramSocket instead for UDP transport.</i></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28java.net.InetAddress,%20int,%20java.net.InetAddress,%20int%29">Socket</a></b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;address,
       int&nbsp;port,
       <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;localAddr,
       int&nbsp;localPort)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a socket and connects it to the specified remote address on
 the specified remote port.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>protected </code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28java.net.SocketImpl%29">Socket</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html">SocketImpl</a>&nbsp;impl)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an unconnected Socket with a user-specified
 SocketImpl.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28java.lang.String,%20int%29">Socket</a></b>(<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a>&nbsp;host,
       int&nbsp;port)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a stream socket and connects it to the specified port
 number on the named host.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28java.lang.String,%20int,%20boolean%29">Socket</a></b>(<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a>&nbsp;host,
       int&nbsp;port,
       boolean&nbsp;stream)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>Deprecated.</b>&nbsp;<i>Use DatagramSocket instead for UDP transport.</i></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#Socket%28java.lang.String,%20int,%20java.net.InetAddress,%20int%29">Socket</a></b>(<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a>&nbsp;host,
       int&nbsp;port,
       <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;localAddr,
       int&nbsp;localPort)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a socket and connects it to the specified remote host on
 the specified remote port.</td>
</tr>
</tbody></table>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<a name="method_summary"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="2"><font size="+2">
<b>Method Summary</b></font></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#bind%28java.net.SocketAddress%29">bind</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;bindpoint)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Binds the socket to a local address.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#close%28%29">close</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Closes this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#connect%28java.net.SocketAddress%29">connect</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects this socket to the server.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#connect%28java.net.SocketAddress,%20int%29">connect</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint,
        int&nbsp;timeout)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects this socket to the server with a specified timeout value.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/nio/channels/SocketChannel.html">SocketChannel</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getChannel%28%29">getChannel</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the unique <a href="file:///D:/progettodireti/api/java/nio/channels/SocketChannel.html"><code>SocketChannel</code></a>
 object associated with this socket, if any.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getInetAddress%28%29">getInetAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the address to which the socket is connected.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/io/InputStream.html">InputStream</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getInputStream%28%29">getInputStream</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an input stream for this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getKeepAlive%28%29">getKeepAlive</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if SO_KEEPALIVE is enabled.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getLocalAddress%28%29">getLocalAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the local address to which the socket is bound.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getLocalPort%28%29">getLocalPort</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the local port to which this socket is bound.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getLocalSocketAddress%28%29">getLocalSocketAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the address of the endpoint this socket is bound to, or
 <code>null</code> if it is not bound yet.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getOOBInline%28%29">getOOBInline</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if OOBINLINE is enabled.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/io/OutputStream.html">OutputStream</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getOutputStream%28%29">getOutputStream</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an output stream for this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getPort%28%29">getPort</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the remote port to which this socket is connected.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getReceiveBufferSize%28%29">getReceiveBufferSize</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the value of the SO_RCVBUF option for this <tt>Socket</tt>, 
 that is the buffer size used by the platform for 
 input on this <tt>Socket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getRemoteSocketAddress%28%29">getRemoteSocketAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the address of the endpoint this socket is connected to, or
 <code>null if it is unconnected.</code></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getReuseAddress%28%29">getReuseAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if SO_REUSEADDR is enabled.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getSendBufferSize%28%29">getSendBufferSize</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get value of the SO_SNDBUF option for this <tt>Socket</tt>, 
 that is the buffer size used by the platform 
 for output on this <tt>Socket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getSoLinger%28%29">getSoLinger</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns setting for SO_LINGER.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getSoTimeout%28%29">getSoTimeout</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns setting for SO_TIMEOUT.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getTcpNoDelay%28%29">getTcpNoDelay</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if TCP_NODELAY is enabled.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#getTrafficClass%28%29">getTrafficClass</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets traffic class or type-of-service in the IP header
 for packets sent from this Socket
 </td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#isBound%28%29">isBound</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the binding state of the socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#isClosed%28%29">isClosed</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the closed state of the socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#isConnected%28%29">isConnected</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the connection state of the socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#isInputShutdown%28%29">isInputShutdown</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns wether the read-half of the socket connection is closed.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#isOutputShutdown%28%29">isOutputShutdown</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns wether the write-half of the socket connection is closed.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#sendUrgentData%28int%29">sendUrgentData</a></b>(int&nbsp;data)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Send one byte of urgent data on the socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setKeepAlive%28boolean%29">setKeepAlive</a></b>(boolean&nbsp;on)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable SO_KEEPALIVE.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setOOBInline%28boolean%29">setOOBInline</a></b>(boolean&nbsp;on)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable OOBINLINE (receipt of TCP urgent data)

 By default, this option is disabled and TCP urgent data received on a 
 socket is silently discarded.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setReceiveBufferSize%28int%29">setReceiveBufferSize</a></b>(int&nbsp;size)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SO_RCVBUF option to the specified value for this
 <tt>Socket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setReuseAddress%28boolean%29">setReuseAddress</a></b>(boolean&nbsp;on)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable the SO_REUSEADDR socket option.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSendBufferSize%28int%29">setSendBufferSize</a></b>(int&nbsp;size)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SO_SNDBUF option to the specified value for this
 <tt>Socket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>static&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSocketImplFactory%28java.net.SocketImplFactory%29">setSocketImplFactory</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html">SocketImplFactory</a>&nbsp;fac)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the client socket implementation factory for the
 application.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSoLinger%28boolean,%20int%29">setSoLinger</a></b>(boolean&nbsp;on,
            int&nbsp;linger)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable SO_LINGER with the specified linger time in seconds.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSoTimeout%28int%29">setSoTimeout</a></b>(int&nbsp;timeout)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable SO_TIMEOUT with the specified timeout, in
  milliseconds.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setTcpNoDelay%28boolean%29">setTcpNoDelay</a></b>(boolean&nbsp;on)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable TCP_NODELAY (disable/enable Nagle's algorithm).</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#setTrafficClass%28int%29">setTrafficClass</a></b>(int&nbsp;tc)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets traffic class or type-of-service octet in the IP
 header for packets sent from this Socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#shutdownInput%28%29">shutdownInput</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Places the input stream for this socket at "end of stream".</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#shutdownOutput%28%29">shutdownOutput</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disables the output stream for this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/Socket.html#toString%28%29">toString</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Converts this socket to a <code>String</code>.</td>
</tr>
</tbody></table>
&nbsp;<a name="methods_inherited_from_class_java.lang.Object"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableSubHeadingColor" bgcolor="#eeeeff">
<td><b>Methods inherited from class java.lang.<a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></b></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><a href="file:///D:/progettodireti/api/java/lang/Object.html#clone%28%29">clone</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#equals%28java.lang.Object%29">equals</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#finalize%28%29">finalize</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#getClass%28%29">getClass</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#hashCode%28%29">hashCode</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#notify%28%29">notify</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#notifyAll%28%29">notifyAll</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28%29">wait</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28long%29">wait</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28long,%20int%29">wait</a></code></td>
</tr>
</tbody></table>
&nbsp;
</p><p>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<a name="constructor_detail"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="1"><font size="+2">
<b>Constructor Detail</b></font></td>
</tr>
</tbody></table>

<a name="Socket()"><!-- --></a></p><h3>
Socket</h3>
<pre>public <b>Socket</b>()</pre>
<dl>
<dd>Creates an unconnected socket, with the
 system-default type of SocketImpl.
<p>
</p></dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

</dl>
<hr>

<a name="Socket(java.net.SocketImpl)"><!-- --></a><h3>
Socket</h3>
<pre>protected <b>Socket</b>(<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html">SocketImpl</a>&nbsp;impl)
          throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Creates an unconnected Socket with a user-specified
 SocketImpl.
 <p>
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>impl</code> - an instance of a <b>SocketImpl</b>
 the subclass wishes to use on the Socket.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error in the underlying protocol,     
 such as a TCP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

</dl>
<hr>

<a name="Socket(java.lang.String, int)"><!-- --></a><h3>
Socket</h3>
<pre>public <b>Socket</b>(<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a>&nbsp;host,
              int&nbsp;port)
       throws <a href="file:///D:/progettodireti/api/java/net/UnknownHostException.html">UnknownHostException</a>,
              <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Creates a stream socket and connects it to the specified port
 number on the named host.
 <p>
 If the application has specified a server socket factory, that
 factory's <code>createSocketImpl</code> method is called to create
 the actual socket implementation. Otherwise a "plain" socket is created.
 </p><p>
 If there is a security manager, its
 <code>checkConnect</code> method is called
 with the host address and <code>port</code> 
 as its arguments. This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>host</code> - the host name.</dd><dd><code>port</code> - the port number.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/UnknownHostException.html">UnknownHostException</a></code> - if the IP address of 
 the host could not be determined.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkConnect</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSocketImplFactory%28java.net.SocketImplFactory%29"><code>setSocketImplFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>
<hr>

<a name="Socket(java.net.InetAddress, int)"><!-- --></a><h3>
Socket</h3>
<pre>public <b>Socket</b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;address,
              int&nbsp;port)
       throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Creates a stream socket and connects it to the specified port
 number at the specified IP address.
 <p>
 If the application has specified a socket factory, that factory's
 <code>createSocketImpl</code> method is called to create the
 actual socket implementation. Otherwise a "plain" socket is created.
 </p><p>
 If there is a security manager, its
 <code>checkConnect</code> method is called
 with the host address and <code>port</code> 
 as its arguments. This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>address</code> - the IP address.</dd><dd><code>port</code> - the port number.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkConnect</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSocketImplFactory%28java.net.SocketImplFactory%29"><code>setSocketImplFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>
<hr>

<a name="Socket(java.lang.String, int, java.net.InetAddress, int)"><!-- --></a><h3>
Socket</h3>
<pre>public <b>Socket</b>(<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a>&nbsp;host,
              int&nbsp;port,
              <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;localAddr,
              int&nbsp;localPort)
       throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Creates a socket and connects it to the specified remote host on
 the specified remote port. The Socket will also bind() to the local
 address and port supplied.
 <p>
 If there is a security manager, its
 <code>checkConnect</code> method is called
 with the host address and <code>port</code> 
 as its arguments. This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>host</code> - the name of the remote host</dd><dd><code>port</code> - the remote port</dd><dd><code>localAddr</code> - the local address the socket is bound to</dd><dd><code>localPort</code> - the local port the socket is bound to
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkConnect</code> method doesn't allow the operation.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>
<hr>

<a name="Socket(java.net.InetAddress, int, java.net.InetAddress, int)"><!-- --></a><h3>
Socket</h3>
<pre>public <b>Socket</b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;address,
              int&nbsp;port,
              <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;localAddr,
              int&nbsp;localPort)
       throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Creates a socket and connects it to the specified remote address on
 the specified remote port. The Socket will also bind() to the local
 address and port supplied.
 <p>
 If there is a security manager, its
 <code>checkConnect</code> method is called
 with the host address and <code>port</code> 
 as its arguments. This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>address</code> - the remote address</dd><dd><code>port</code> - the remote port</dd><dd><code>localAddr</code> - the local address the socket is bound to</dd><dd><code>localPort</code> - the local port the socket is bound to
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkConnect</code> method doesn't allow the operation.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>
<hr>

<a name="Socket(java.lang.String, int, boolean)"><!-- --></a><h3>
Socket</h3>
<pre>public <b>Socket</b>(<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a>&nbsp;host,
              int&nbsp;port,
              boolean&nbsp;stream)
       throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd><b>Deprecated.</b>&nbsp;<i>Use DatagramSocket instead for UDP transport.</i>
<p>
</p></dd><dd>Creates a stream socket and connects it to the specified port
 number on the named host.
 <p>
 If the stream argument is <code>true</code>, this creates a
 stream socket. If the stream argument is <code>false</code>, it
 creates a datagram socket.
 </p><p>
 If the application has specified a server socket factory, that
 factory's <code>createSocketImpl</code> method is called to create
 the actual socket implementation. Otherwise a "plain" socket is created.
 </p><p>
 If there is a security manager, its
 <code>checkConnect</code> method is called
 with the host address and <code>port</code> 
 as its arguments. This could result in a SecurityException.
 </p><p>
 If a UDP socket is used, TCP/IP related socket options will not apply.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>host</code> - the host name.</dd><dd><code>port</code> - the port number.</dd><dd><code>stream</code> - a <code>boolean</code> indicating whether this is
                      a stream socket or a datagram socket.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkConnect</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSocketImplFactory%28java.net.SocketImplFactory%29"><code>setSocketImplFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>
<hr>

<a name="Socket(java.net.InetAddress, int, boolean)"><!-- --></a><h3>
Socket</h3>
<pre>public <b>Socket</b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;host,
              int&nbsp;port,
              boolean&nbsp;stream)
       throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd><b>Deprecated.</b>&nbsp;<i>Use DatagramSocket instead for UDP transport.</i>
<p>
</p></dd><dd>Creates a socket and connects it to the specified port number at
 the specified IP address.
 <p>
 If the stream argument is <code>true</code>, this creates a
 stream socket. If the stream argument is <code>false</code>, it
 creates a datagram socket.
 </p><p>
 If the application has specified a server socket factory, that
 factory's <code>createSocketImpl</code> method is called to create
 the actual socket implementation. Otherwise a "plain" socket is created.
 
 </p><p>If there is a security manager, its
 <code>checkConnect</code> method is called
 with <code>host.getHostAddress()</code> and <code>port</code> 
 as its arguments. This could result in a SecurityException.
 </p><p>
 If UDP socket is used, TCP/IP related socket options will not apply.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>host</code> - the IP address.</dd><dd><code>port</code> - the port number.</dd><dd><code>stream</code> - if <code>true</code>, create a stream socket;
                       otherwise, create a datagram socket.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkConnect</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSocketImplFactory%28java.net.SocketImplFactory%29"><code>setSocketImplFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>

<!-- ============ METHOD DETAIL ========== -->

<a name="method_detail"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="1"><font size="+2">
<b>Method Detail</b></font></td>
</tr>
</tbody></table>

<a name="connect(java.net.SocketAddress)"><!-- --></a><h3>
connect</h3>
<pre>public void <b>connect</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint)
             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Connects this socket to the server.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>endpoint</code> - the <code>SocketAddress</code>
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an error occurs during the connection
</dd><dd><code><a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html">IllegalBlockingModeException</a></code> - if this socket has an associated channel,
          and the channel is in non-blocking mode
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if endpoint is null or is a
          SocketAddress subclass not supported by this socket</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="connect(java.net.SocketAddress, int)"><!-- --></a><h3>
connect</h3>
<pre>public void <b>connect</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint,
                    int&nbsp;timeout)
             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Connects this socket to the server with a specified timeout value.
 A timeout of zero is interpreted as an infinite timeout. The connection
 will then block until established or an error occurs.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>endpoint</code> - the <code>SocketAddress</code></dd><dd><code>timeout</code> - the timeout value to be used in milliseconds.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an error occurs during the connection
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketTimeoutException.html">SocketTimeoutException</a></code> - if timeout expires before connecting
</dd><dd><code><a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html">IllegalBlockingModeException</a></code> - if this socket has an associated channel,
          and the channel is in non-blocking mode
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if endpoint is null or is a
          SocketAddress subclass not supported by this socket</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="bind(java.net.SocketAddress)"><!-- --></a><h3>
bind</h3>
<pre>public void <b>bind</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;bindpoint)
          throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Binds the socket to a local address.
 <p>
 If the address is <code>null</code>, then the system will pick up
 an ephemeral port and a valid local address to bind the socket.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>bindpoint</code> - the <code>SocketAddress</code> to bind to
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if the bind operation fails, or if the socket
			   is already bound.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if bindpoint is a
          SocketAddress subclass not supported by this socket</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#isBound%28%29"><code>isBound()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getInetAddress()"><!-- --></a><h3>
getInetAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a> <b>getInetAddress</b>()</pre>
<dl>
<dd>Returns the address to which the socket is connected.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the remote IP address to which this socket is connected,
		or <code>null</code> if the socket is not connected.</dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalAddress()"><!-- --></a><h3>
getLocalAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a> <b>getLocalAddress</b>()</pre>
<dl>
<dd>Gets the local address to which the socket is bound.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the local address to which the socket is bound or 
	       <code>InetAddress.anyLocalAddress()</code>
	       if the socket is not bound yet.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

</dl>
</dd>
</dl>
<hr>

<a name="getPort()"><!-- --></a><h3>
getPort</h3>
<pre>public int <b>getPort</b>()</pre>
<dl>
<dd>Returns the remote port to which this socket is connected.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the remote port number to which this socket is connected, or
	        0 if the socket is not connected yet.</dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalPort()"><!-- --></a><h3>
getLocalPort</h3>
<pre>public int <b>getLocalPort</b>()</pre>
<dl>
<dd>Returns the local port to which this socket is bound.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the local port number to which this socket is bound or -1
	        if the socket is not bound yet.</dd></dl>
</dd>
</dl>
<hr>

<a name="getRemoteSocketAddress()"><!-- --></a><h3>
getRemoteSocketAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a> <b>getRemoteSocketAddress</b>()</pre>
<dl>
<dd>Returns the address of the endpoint this socket is connected to, or
 <code>null if it is unconnected.
</code><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>SocketAddress</code> reprensenting the remote endpoint of this
	       socket, or <code>null</code> if it is not connected yet.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getInetAddress%28%29"><code>getInetAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#getPort%28%29"><code>getPort()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#connect%28java.net.SocketAddress,%20int%29"><code>connect(SocketAddress, int)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#connect%28java.net.SocketAddress%29"><code>connect(SocketAddress)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalSocketAddress()"><!-- --></a><h3>
getLocalSocketAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a> <b>getLocalSocketAddress</b>()</pre>
<dl>
<dd>Returns the address of the endpoint this socket is bound to, or
 <code>null</code> if it is not bound yet.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>SocketAddress</code> representing the local endpoint of this
	       socket, or <code>null</code> if it is not bound yet.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getLocalAddress%28%29"><code>getLocalAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#getLocalPort%28%29"><code>getLocalPort()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getChannel()"><!-- --></a><h3>
getChannel</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/nio/channels/SocketChannel.html">SocketChannel</a> <b>getChannel</b>()</pre>
<dl>
<dd>Returns the unique <a href="file:///D:/progettodireti/api/java/nio/channels/SocketChannel.html"><code>SocketChannel</code></a>
 object associated with this socket, if any.

 <p> A socket will have a channel if, and only if, the channel itself was
 created via the <a href="file:///D:/progettodireti/api/java/nio/channels/SocketChannel.html#open%28%29"><code>SocketChannel.open</code></a> or <a href="file:///D:/progettodireti/api/java/nio/channels/ServerSocketChannel.html#accept%28%29"><code>ServerSocketChannel.accept</code></a>
 methods.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the socket channel associated with this socket,
          or <tt>null</tt> if this socket was not created
          for a channel</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="getInputStream()"><!-- --></a><h3>
getInputStream</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/io/InputStream.html">InputStream</a> <b>getInputStream</b>()
                           throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Returns an input stream for this socket.

 <p> If this socket has an associated channel then the resulting input
 stream delegates all of its operations to the channel.  If the channel
 is in non-blocking mode then the input stream's <tt>read</tt> operations
 will throw an <a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html"><code>IllegalBlockingModeException</code></a>.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>an input stream for reading bytes from this socket.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the
               input stream or if the socket is not connected.</dd></dl>
</dd>
</dl>
<hr>

<a name="getOutputStream()"><!-- --></a><h3>
getOutputStream</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/io/OutputStream.html">OutputStream</a> <b>getOutputStream</b>()
                             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Returns an output stream for this socket.

 <p> If this socket has an associated channel then the resulting output
 stream delegates all of its operations to the channel.  If the channel
 is in non-blocking mode then the output stream's <tt>write</tt>
 operations will throw an <a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html"><code>IllegalBlockingModeException</code></a>.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>an output stream for writing bytes to this socket.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when creating the
               output stream or if the socket is not connected.</dd></dl>
</dd>
</dl>
<hr>

<a name="setTcpNoDelay(boolean)"><!-- --></a><h3>
setTcpNoDelay</h3>
<pre>public void <b>setTcpNoDelay</b>(boolean&nbsp;on)
                   throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable TCP_NODELAY (disable/enable Nagle's algorithm).
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - <code>true</code> to enable TCP_NODELAY, 
 <code>false</code> to disable.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error 
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getTcpNoDelay%28%29"><code>getTcpNoDelay()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getTcpNoDelay()"><!-- --></a><h3>
getTcpNoDelay</h3>
<pre>public boolean <b>getTcpNoDelay</b>()
                      throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Tests if TCP_NODELAY is enabled.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>boolean</code> indicating whether or not TCP_NODELAY is enabled.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setTcpNoDelay%28boolean%29"><code>setTcpNoDelay(boolean)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setSoLinger(boolean, int)"><!-- --></a><h3>
setSoLinger</h3>
<pre>public void <b>setSoLinger</b>(boolean&nbsp;on,
                        int&nbsp;linger)
                 throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable SO_LINGER with the specified linger time in seconds. 
 The maximum timeout value is platform specific.

 The setting only affects socket close.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - whether or not to linger on.</dd><dd><code>linger</code> - how long to linger for, if on is true.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if the linger value is negative.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getSoLinger%28%29"><code>getSoLinger()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getSoLinger()"><!-- --></a><h3>
getSoLinger</h3>
<pre>public int <b>getSoLinger</b>()
                throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Returns setting for SO_LINGER. -1 returns implies that the
 option is disabled.

 The setting only affects socket close.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the setting for SO_LINGER.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSoLinger%28boolean,%20int%29"><code>setSoLinger(boolean, int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="sendUrgentData(int)"><!-- --></a><h3>
sendUrgentData</h3>
<pre>public void <b>sendUrgentData</b>(int&nbsp;data)
                    throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Send one byte of urgent data on the socket. The byte to be sent is the lowest eight
 bits of the data parameter. The urgent byte is
 sent after any preceding writes to the socket OutputStream
 and before any future writes to the OutputStream.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>data</code> - The byte of data to send
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if there is an error
  sending the data.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="setOOBInline(boolean)"><!-- --></a><h3>
setOOBInline</h3>
<pre>public void <b>setOOBInline</b>(boolean&nbsp;on)
                  throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable OOBINLINE (receipt of TCP urgent data)

 By default, this option is disabled and TCP urgent data received on a 
 socket is silently discarded. If the user wishes to receive urgent data, then
 this option must be enabled. When enabled, urgent data is received
 inline with normal data. 
 <p>
 Note, only limited support is provided for handling incoming urgent 
 data. In particular, no notification of incoming urgent data is provided 
 and there is no capability to distinguish between normal data and urgent
 data unless provided by a higher level protocol.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - <code>true</code> to enable OOBINLINE, 
 <code>false</code> to disable.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error 
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getOOBInline%28%29"><code>getOOBInline()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getOOBInline()"><!-- --></a><h3>
getOOBInline</h3>
<pre>public boolean <b>getOOBInline</b>()
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Tests if OOBINLINE is enabled.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>boolean</code> indicating whether or not OOBINLINE is enabled.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setOOBInline%28boolean%29"><code>setOOBInline(boolean)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setSoTimeout(int)"><!-- --></a><h3>
setSoTimeout</h3>
<pre>public void <b>setSoTimeout</b>(int&nbsp;timeout)
                  throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable SO_TIMEOUT with the specified timeout, in
  milliseconds.  With this option set to a non-zero timeout,
  a read() call on the InputStream associated with this Socket
  will block for only this amount of time.  If the timeout expires,
  a <b>java.net.SocketTimeoutException</b> is raised, though the
  Socket is still valid. The option <b>must</b> be enabled
  prior to entering the blocking operation to have effect. The
  timeout must be &gt; 0.
  A timeout of zero is interpreted as an infinite timeout.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>timeout</code> - the specified timeout, in milliseconds.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>JDK 1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getSoTimeout%28%29"><code>getSoTimeout()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getSoTimeout()"><!-- --></a><h3>
getSoTimeout</h3>
<pre>public int <b>getSoTimeout</b>()
                 throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Returns setting for SO_TIMEOUT.  0 returns implies that the
 option is disabled (i.e., timeout of infinity).
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the setting for SO_TIMEOUT
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSoTimeout%28int%29"><code>setSoTimeout(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setSendBufferSize(int)"><!-- --></a><h3>
setSendBufferSize</h3>
<pre>public void <b>setSendBufferSize</b>(int&nbsp;size)
                       throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Sets the SO_SNDBUF option to the specified value for this
 <tt>Socket</tt>. The SO_SNDBUF option is used by the platform's
 networking code as a hint for the size to set
 the underlying network I/O buffers.

 <p>Because SO_SNDBUF is a hint, applications that want to
 verify what size the buffers were set to should call
 <a href="file:///D:/progettodireti/api/java/net/Socket.html#getSendBufferSize%28%29"><code>getSendBufferSize()</code></a>.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>size</code> - the size to which to set the send buffer
 size. This value must be greater than 0.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if the 
 value is 0 or is negative.</dd><dt><b>Since:</b></dt><dd>1.2</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getSendBufferSize%28%29"><code>getSendBufferSize()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getSendBufferSize()"><!-- --></a><h3>
getSendBufferSize</h3>
<pre>public int <b>getSendBufferSize</b>()
                      throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Get value of the SO_SNDBUF option for this <tt>Socket</tt>, 
 that is the buffer size used by the platform 
 for output on this <tt>Socket</tt>.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the value of the SO_SNDBUF option for this <tt>Socket</tt>.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.2</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setSendBufferSize%28int%29"><code>setSendBufferSize(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setReceiveBufferSize(int)"><!-- --></a><h3>
setReceiveBufferSize</h3>
<pre>public void <b>setReceiveBufferSize</b>(int&nbsp;size)
                          throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Sets the SO_RCVBUF option to the specified value for this
 <tt>Socket</tt>. The SO_RCVBUF option is used by the platform's
 networking code as a hint for the size to set
 the underlying network I/O buffers.

 <p>Increasing the receive buffer size can increase the performance of
 network I/O for high-volume connection, while decreasing it can
 help reduce the backlog of incoming data. 

 </p><p>Because SO_RCVBUF is a hint, applications that want to
 verify what size the buffers were set to should call
 <a href="file:///D:/progettodireti/api/java/net/Socket.html#getReceiveBufferSize%28%29"><code>getReceiveBufferSize()</code></a>.

 </p><p>The value of SO_RCVBUF is also used to set the TCP receive window
 that is advertized to the remote peer. Generally, the window size
 can be modified at any time when a socket is connected. However, if
 a receive window larger than 64K is required then this must be requested
 <b>before</b> the socket is connected to the remote peer. There are two
 cases to be aware of:</p><p>
 </p><ol>
 <li>For sockets accepted from a ServerSocket, this must be done by calling
 <a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setReceiveBufferSize%28int%29"><code>ServerSocket.setReceiveBufferSize(int)</code></a> before the ServerSocket 
 is bound to a local address.<p>
 </p></li><li>For client sockets, setReceiveBufferSize() must be called before
 connecting the socket to its remote peer.<p></p></li></ol>
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>size</code> - the size to which to set the receive buffer
 size. This value must be greater than 0.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if the value is 0 or is
 negative.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.2</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getReceiveBufferSize%28%29"><code>getReceiveBufferSize()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setReceiveBufferSize%28int%29"><code>ServerSocket.setReceiveBufferSize(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getReceiveBufferSize()"><!-- --></a><h3>
getReceiveBufferSize</h3>
<pre>public int <b>getReceiveBufferSize</b>()
                         throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Gets the value of the SO_RCVBUF option for this <tt>Socket</tt>, 
 that is the buffer size used by the platform for 
 input on this <tt>Socket</tt>.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the value of the SO_RCVBUF option for this <tt>Socket</tt>.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.2</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setReceiveBufferSize%28int%29"><code>setReceiveBufferSize(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setKeepAlive(boolean)"><!-- --></a><h3>
setKeepAlive</h3>
<pre>public void <b>setKeepAlive</b>(boolean&nbsp;on)
                  throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable SO_KEEPALIVE.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - whether or not to have socket keep alive turned on.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.3</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getKeepAlive%28%29"><code>getKeepAlive()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getKeepAlive()"><!-- --></a><h3>
getKeepAlive</h3>
<pre>public boolean <b>getKeepAlive</b>()
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Tests if SO_KEEPALIVE is enabled.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>boolean</code> indicating whether or not SO_KEEPALIVE is enabled.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.3</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setKeepAlive%28boolean%29"><code>setKeepAlive(boolean)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setTrafficClass(int)"><!-- --></a><h3>
setTrafficClass</h3>
<pre>public void <b>setTrafficClass</b>(int&nbsp;tc)
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Sets traffic class or type-of-service octet in the IP
 header for packets sent from this Socket.
 As the underlying network implementation may ignore this
 value applications should consider it a hint.

 <p> The tc <b>must</b> be in the range <code> 0 &lt;= tc &lt;=
 255</code> or an IllegalArgumentException will be thrown.
 </p><p>Notes:
 </p><p> for Internet Protocol v4 the value consists of an octet
 with precedence and TOS fields as detailed in RFC 1349. The
 TOS field is bitset created by bitwise-or'ing values such
 the following :-
 </p><p>
 </p><ul>
 <li><code>IPTOS_LOWCOST (0x02)</code></li>
 <li><code>IPTOS_RELIABILITY (0x04)</code></li>
 <li><code>IPTOS_THROUGHPUT (0x08)</code></li>
 <li><code>IPTOS_LOWDELAY (0x10)</code></li>
 </ul>
 The last low order bit is always ignored as this
 corresponds to the MBZ (must be zero) bit.
 <p>
 Setting bits in the precedence field may result in a
 SocketException indicating that the operation is not
 permitted.
 </p><p>
 for Internet Protocol v6 <code>tc</code> is the value that
 would be placed into the sin6_flowinfo field of the IP header.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>tc</code> - an <code>int</code> value for the bitset.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error setting the
 traffic class or type-of-service</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getTrafficClass%28%29"><code>getTrafficClass()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getTrafficClass()"><!-- --></a><h3>
getTrafficClass</h3>
<pre>public int <b>getTrafficClass</b>()
                    throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Gets traffic class or type-of-service in the IP header
 for packets sent from this Socket
 <p>
 As the underlying network implementation may ignore the
 traffic class or type-of-service set using <code>#setTrafficClass()</code>
 this method may return a different value than was previously
 set using the <code>#setTrafficClass()</code> method on this Socket.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the traffic class or type-of-service already set
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error obtaining the
 traffic class or type-of-service value.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setTrafficClass%28int%29"><code>setTrafficClass(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setReuseAddress(boolean)"><!-- --></a><h3>
setReuseAddress</h3>
<pre>public void <b>setReuseAddress</b>(boolean&nbsp;on)
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable the SO_REUSEADDR socket option.
 <p>
 When a TCP connection is closed the connection may remain
 in a timeout state for a period of time after the connection
 is closed (typically known as the <tt>TIME_WAIT</tt> state
 or <tt>2MSL</tt> wait state).
 For applications using a well known socket address or port 
 it may not be possible to bind a socket to the required
 <tt>SocketAddress</tt> if there is a connection in the
 timeout state involving the socket address or port.
 </p><p>
 Enabling <tt>SO_REUSEADDR</tt> prior to binding the socket
 using <a href="file:///D:/progettodireti/api/java/net/Socket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a> allows the socket to be
 bound even though a previous connection is in a timeout
 state.
 </p><p>
 When a <tt>Socket</tt> is created the initial setting
 of <tt>SO_REUSEADDR</tt> is disabled.
 </p><p>
 The behaviour when <tt>SO_REUSEADDR</tt> is enabled or
 disabled after a socket is bound (See <a href="file:///D:/progettodireti/api/java/net/Socket.html#isBound%28%29"><code>isBound()</code></a>)
 is not defined.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - whether to enable or disable the socket option
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if an error occurs enabling or
            disabling the <tt>SO_RESUEADDR</tt> socket option,
		  or the socket is closed.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#getReuseAddress%28%29"><code>getReuseAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#isClosed%28%29"><code>isClosed()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#isBound%28%29"><code>isBound()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getReuseAddress()"><!-- --></a><h3>
getReuseAddress</h3>
<pre>public boolean <b>getReuseAddress</b>()
                        throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Tests if SO_REUSEADDR is enabled.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>boolean</code> indicating whether or not SO_REUSEADDR is enabled.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#setReuseAddress%28boolean%29"><code>setReuseAddress(boolean)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="close()"><!-- --></a><h3>
close</h3>
<pre>public void <b>close</b>()
           throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Closes this socket.
 <p>
 Any thread currently blocked in an I/O operation upon this socket
 will throw a <a href="file:///D:/progettodireti/api/java/net/SocketException.html"><code>SocketException</code></a>.
 </p><p>
 Once a socket has been closed, it is not available for further networking
 use (i.e. can't be reconnected or rebound). A new socket needs to be
 created.

 </p><p> If this socket has an associated channel then the channel is closed
 as well.
</p><p>
</p></dd><dd><dl>

<dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when closing this socket.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#isClosed%28%29"><code>isClosed()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="shutdownInput()"><!-- --></a><h3>
shutdownInput</h3>
<pre>public void <b>shutdownInput</b>()
                   throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Places the input stream for this socket at "end of stream".
 Any data sent to the input stream side of the socket is acknowledged
 and then silently discarded.
 <p>
 If you read from a socket input stream after invoking 
 shutdownInput() on the socket, the stream will return EOF.
</p><p>
</p></dd><dd><dl>

<dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when shutting down this
 socket.</dd><dt><b>Since:</b></dt><dd>1.3</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#shutdownOutput%28%29"><code>shutdownOutput()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#close%28%29"><code>close()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#setSoLinger%28boolean,%20int%29"><code>setSoLinger(boolean, int)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#isInputShutdown%28%29"><code>isInputShutdown()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="shutdownOutput()"><!-- --></a><h3>
shutdownOutput</h3>
<pre>public void <b>shutdownOutput</b>()
                    throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Disables the output stream for this socket.
 For a TCP socket, any previously written data will be sent
 followed by TCP's normal connection termination sequence.

 If you write to a socket output stream after invoking 
 shutdownOutput() on the socket, the stream will throw 
 an IOException.
<p>
</p></dd><dd><dl>

<dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when shutting down this
 socket.</dd><dt><b>Since:</b></dt><dd>1.3</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#shutdownInput%28%29"><code>shutdownInput()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#close%28%29"><code>close()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#setSoLinger%28boolean,%20int%29"><code>setSoLinger(boolean, int)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/Socket.html#isOutputShutdown%28%29"><code>isOutputShutdown()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="toString()"><!-- --></a><h3>
toString</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/lang/String.html">String</a> <b>toString</b>()</pre>
<dl>
<dd>Converts this socket to a <code>String</code>.
<p>
</p></dd><dd><dl>
<dt><b>Overrides:</b></dt><dd><code><a href="file:///D:/progettodireti/api/java/lang/Object.html#toString%28%29">toString</a></code> in class <code><a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></code></dd></dl>
</dd>
<dd><dl>

<dt><b>Returns:</b></dt><dd>a string representation of this socket.</dd></dl>
</dd>
</dl>
<hr>

<a name="isConnected()"><!-- --></a><h3>
isConnected</h3>
<pre>public boolean <b>isConnected</b>()</pre>
<dl>
<dd>Returns the connection state of the socket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the socket successfuly connected to a server</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="isBound()"><!-- --></a><h3>
isBound</h3>
<pre>public boolean <b>isBound</b>()</pre>
<dl>
<dd>Returns the binding state of the socket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the socket successfuly bound to an address</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#bind%28java.net.SocketAddress%29"><code>bind(java.net.SocketAddress)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="isClosed()"><!-- --></a><h3>
isClosed</h3>
<pre>public boolean <b>isClosed</b>()</pre>
<dl>
<dd>Returns the closed state of the socket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the socket has been closed</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#close%28%29"><code>close()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="isInputShutdown()"><!-- --></a><h3>
isInputShutdown</h3>
<pre>public boolean <b>isInputShutdown</b>()</pre>
<dl>
<dd>Returns wether the read-half of the socket connection is closed.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the input of the socket has been shutdown</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#shutdownInput%28%29"><code>shutdownInput()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="isOutputShutdown()"><!-- --></a><h3>
isOutputShutdown</h3>
<pre>public boolean <b>isOutputShutdown</b>()</pre>
<dl>
<dd>Returns wether the write-half of the socket connection is closed.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the output of the socket has been shutdown</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/Socket.html#shutdownOutput%28%29"><code>shutdownOutput()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setSocketImplFactory(java.net.SocketImplFactory)"><!-- --></a><h3>
setSocketImplFactory</h3>
<pre>public static void <b>setSocketImplFactory</b>(<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html">SocketImplFactory</a>&nbsp;fac)
                                 throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Sets the client socket implementation factory for the
 application. The factory can be specified only once.
 <p>
 When an application creates a new client socket, the socket
 implementation factory's <code>createSocketImpl</code> method is
 called to create the actual socket implementation.
 
 </p><p>If there is a security manager, this method first calls
 the security manager's <code>checkSetFactory</code> method 
 to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>fac</code> - the desired factory.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when setting the
               socket factory.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the factory is already defined.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkSetFactory</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkSetFactory%28%29"><code>SecurityManager.checkSetFactory()</code></a></dd></dl>
</dd>
</dl>
<!-- ========= END OF CLASS DATA ========= -->
<hr>

<!-- ========== START OF NAVBAR ========== -->
<a name="navbar_bottom"><!-- --></a>
<table border="0" cellpadding="1" cellspacing="0" width="100%">
<tbody><tr>
<td colspan="3" class="NavBarCell1" bgcolor="#eeeeff">
<a name="navbar_bottom_firstrow"><!-- --></a>
<table border="0" cellpadding="0" cellspacing="3">
  <tbody><tr align="center" valign="top">
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td>
  <td class="NavBarCell1Rev" bgcolor="#ffffff"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/class-use/Socket.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/index-files/index-1.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td>
  </tr>
</tbody></table>
</td>
<td rowspan="3" align="right" valign="top"><em>
<b>Java<sup><font size="-2">TM</font></sup>&nbsp;2&nbsp;Platform<br>Std.&nbsp;Ed. v1.4.0</b></em>
</td>
</tr>

<tr>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
&nbsp;<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html"><b>PREV CLASS</b></a>&nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html"><b>NEXT CLASS</b></a></font></td>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
  <a href="file:///D:/progettodireti/api/index.html" target="_top"><b>FRAMES</b></a>  &nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/Socket.html" target="_top"><b>NO FRAMES</b></a>  &nbsp;
&nbsp;
<script>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</script>
<noscript>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</noscript>
</font></td>
</tr>
<tr>
<td class="NavBarCell3" valign="top"><font size="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td>
<td class="NavBarCell3" valign="top"><font size="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td>
</tr>
</tbody></table>
<!-- =========== END OF NAVBAR =========== -->

<hr>
<font size="-1"><a href="http://java.sun.com/cgi-bin/bugreport.cgi">Submit a bug or feature</a><br>For further API reference and developer documentation, see <a href="file:///D:/progettodireti/relnotes/devdocs-vs-specs.html">Java 2 SDK SE Developer Documentation</a>.
That documentation contains more detailed, developer-targeted
descriptions, with conceptual overviews, definitions of terms,
workarounds, and working code examples. </font><p><font size="-1">Java, Java 2D, and JDBC are trademarks or registered trademarks of Sun Microsystems, Inc. in the US and other countries.<br>Copyright 1993-2002 Sun Microsystems, Inc. 901 San Antonio Road<br>Palo Alto, California, 94303, U.S.A.  All Rights Reserved.</font>
</p></body></html>