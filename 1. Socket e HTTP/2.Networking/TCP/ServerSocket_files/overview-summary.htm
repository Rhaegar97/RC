<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><head><!--NewPage--><!-- Generated by javadoc on Wed Jan 30 05:35:51 PST 2002 --><title>ServerSocket (Java 2 Platform SE v1.4.0)</title>


<link rel="stylesheet" type="text/css" href="overview-frame_data/stylesheet.css" title="Style">
<script>
function asd()
{
parent.document.title="ServerSocket (Java 2 Platform SE v1.4.0)";
}
</script></head>



<body onload="asd();" bgcolor="white">

<!-- ========== START OF NAVBAR ========== -->
<a name="navbar_top"><!-- --></a>
<table border="0" cellpadding="1" cellspacing="0" width="100%">
<tbody><tr>
<td colspan="3" class="NavBarCell1" bgcolor="#eeeeff">
<a name="navbar_top_firstrow"><!-- --></a>
<table border="0" cellpadding="0" cellspacing="3">
  <tbody><tr align="center" valign="top">
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td>
  <td class="NavBarCell1Rev" bgcolor="#ffffff"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/class-use/ServerSocket.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/index-files/index-1.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td>
  </tr>
</tbody></table>
</td>
<td rowspan="3" align="right" valign="top"><em>
<b>Java<sup><font size="-2">TM</font></sup>&nbsp;2&nbsp;Platform<br>Std.&nbsp;Ed. v1.4.0</b></em>
</td>
</tr>

<tr>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
&nbsp;<a href="file:///D:/progettodireti/api/java/net/PasswordAuthentication.html"><b>PREV CLASS</b></a>&nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/Socket.html"><b>NEXT CLASS</b></a></font></td>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
  <a href="file:///D:/progettodireti/api/index.html" target="_top"><b>FRAMES</b></a>  &nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html" target="_top"><b>NO FRAMES</b></a>  &nbsp;
&nbsp;
<script>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</script>
<noscript>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</noscript>
</font></td>
</tr>
<tr>
<td class="NavBarCell3" valign="top"><font size="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td>
<td class="NavBarCell3" valign="top"><font size="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td>
</tr>
</tbody></table>
<!-- =========== END OF NAVBAR =========== -->

<hr>
<!-- ======== START OF CLASS DATA ======== -->
<h2>
<font size="-1">
java.net</font>
<br>
Class  ServerSocket</h2>
<pre><a href="file:///D:/progettodireti/api/java/lang/Object.html">java.lang.Object</a>
  |
  +--<b>java.net.ServerSocket</b>
</pre>
<dl>
<dt><b>Direct Known Subclasses:</b> </dt><dd><a href="file:///D:/progettodireti/api/javax/net/ssl/SSLServerSocket.html">SSLServerSocket</a></dd>
</dl>
<hr>
<dl>
<dt>public class <b>ServerSocket</b></dt><dt>extends <a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></dt></dl>

<p>
This class implements server sockets. A server socket waits for 
 requests to come in over the network. It performs some operation 
 based on that request, and then possibly returns a result to the requester.
 </p><p>
 The actual work of the server socket is performed by an instance 
 of the <code>SocketImpl</code> class. An application can 
 change the socket factory that creates the socket 
 implementation to configure itself to create sockets 
 appropriate to the local firewall.
</p><p>

</p><p>
</p><dl>
<dt><b>Since:</b></dt><dd>JDK1.0</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setSocketFactory%28java.net.SocketImplFactory%29"><code>setSocketFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/nio/channels/ServerSocketChannel.html"><code>ServerSocketChannel</code></a></dd></dl>
<hr>

<p>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<a name="constructor_summary"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="2"><font size="+2">
<b>Constructor Summary</b></font></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#ServerSocket%28%29">ServerSocket</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an unbound server socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#ServerSocket%28int%29">ServerSocket</a></b>(int&nbsp;port)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a server socket on a specified port.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#ServerSocket%28int,%20int%29">ServerSocket</a></b>(int&nbsp;port,
             int&nbsp;backlog)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a server socket and binds it to the specified local port 
 number, with the specified backlog.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#ServerSocket%28int,%20int,%20java.net.InetAddress%29">ServerSocket</a></b>(int&nbsp;port,
             int&nbsp;backlog,
             <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;bindAddr)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a server with the specified port, listen backlog, and 
 local IP address to bind to.</td>
</tr>
</tbody></table>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<a name="method_summary"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="2"><font size="+2">
<b>Method Summary</b></font></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/Socket.html">Socket</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#accept%28%29">accept</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Listens for a connection to be made to this socket and accepts 
 it.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#bind%28java.net.SocketAddress%29">bind</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Binds the <code>ServerSocket</code> to a specific address
 (IP address and port number).</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#bind%28java.net.SocketAddress,%20int%29">bind</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint,
     int&nbsp;backlog)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Binds the <code>ServerSocket</code> to a specific address
 (IP address and port number).</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#close%28%29">close</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Closes this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/nio/channels/ServerSocketChannel.html">ServerSocketChannel</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getChannel%28%29">getChannel</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the unique <a href="file:///D:/progettodireti/api/java/nio/channels/ServerSocketChannel.html"><code>ServerSocketChannel</code></a> object
 associated with this socket, if any.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getInetAddress%28%29">getInetAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the local address of this server socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getLocalPort%28%29">getLocalPort</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the port on which this socket is listening.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getLocalSocketAddress%28%29">getLocalSocketAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the address of the endpoint this socket is bound to, or
 <code>null</code> if it is not bound yet.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getReceiveBufferSize%28%29">getReceiveBufferSize</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the value of the SO_RCVBUF option for this <tt>ServerSocket</tt>, 
 that is the proposed buffer size that will be used for Sockets accepted
 from this <tt>ServerSocket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getReuseAddress%28%29">getReuseAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if SO_REUSEADDR is enabled.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getSoTimeout%28%29">getSoTimeout</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrive setting for SO_TIMEOUT.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>protected &nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#implAccept%28java.net.Socket%29">implAccept</a></b>(<a href="file:///D:/progettodireti/api/java/net/Socket.html">Socket</a>&nbsp;s)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subclasses of ServerSocket use this method to override accept()
 to return their own subclass of socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#isBound%28%29">isBound</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the binding state of the ServerSocket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#isClosed%28%29">isClosed</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the closed state of the ServerSocket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setReceiveBufferSize%28int%29">setReceiveBufferSize</a></b>(int&nbsp;size)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets a default proposed value for the SO_RCVBUF option for sockets 
 accepted from this <tt>ServerSocket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setReuseAddress%28boolean%29">setReuseAddress</a></b>(boolean&nbsp;on)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable the SO_REUSEADDR socket option.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>static&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setSocketFactory%28java.net.SocketImplFactory%29">setSocketFactory</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html">SocketImplFactory</a>&nbsp;fac)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the server socket implementation factory for the 
 application.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setSoTimeout%28int%29">setSoTimeout</a></b>(int&nbsp;timeout)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable SO_TIMEOUT with the specified timeout, in
 milliseconds.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/lang/String.html">String</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#toString%28%29">toString</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the implementation address and implementation port of 
 this socket as a <code>String</code>.</td>
</tr>
</tbody></table>
&nbsp;<a name="methods_inherited_from_class_java.lang.Object"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableSubHeadingColor" bgcolor="#eeeeff">
<td><b>Methods inherited from class java.lang.<a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></b></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><a href="file:///D:/progettodireti/api/java/lang/Object.html#clone%28%29">clone</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#equals%28java.lang.Object%29">equals</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#finalize%28%29">finalize</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#getClass%28%29">getClass</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#hashCode%28%29">hashCode</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#notify%28%29">notify</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#notifyAll%28%29">notifyAll</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28%29">wait</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28long%29">wait</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28long,%20int%29">wait</a></code></td>
</tr>
</tbody></table>
&nbsp;
</p><p>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<a name="constructor_detail"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="1"><font size="+2">
<b>Constructor Detail</b></font></td>
</tr>
</tbody></table>

<a name="ServerSocket()"><!-- --></a></p><h3>
ServerSocket</h3>
<pre>public <b>ServerSocket</b>()
             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Creates an unbound server socket.
<p>

</p></dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - IO error when opening the socket.</dd></dl>
<hr>

<a name="ServerSocket(int)"><!-- --></a><h3>
ServerSocket</h3>
<pre>public <b>ServerSocket</b>(int&nbsp;port)
             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Creates a server socket on a specified port. A port of 
 <code>0</code> creates a socket on any free port. 
 <p>
 The maximum queue length for incoming connection indications (a 
 request to connect) is set to <code>50</code>. If a connection 
 indication arrives when the queue is full, the connection is refused.
 </p><p>
 If the application has specified a server socket factory, that 
 factory's <code>createSocketImpl</code> method is called to create 
 the actual socket implementation. Otherwise a "plain" socket is created.
 </p><p>
 If there is a security manager, 
 its <code>checkListen</code> method is called
 with the <code>port</code> argument
 as its argument to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>port</code> - the port number, or <code>0</code> to use any
                   free port.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when opening the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its <code>checkListen</code> 
 method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setSocketFactory%28java.net.SocketImplFactory%29"><code>setSocketFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkListen%28int%29"><code>SecurityManager.checkListen(int)</code></a></dd></dl>
<hr>

<a name="ServerSocket(int, int)"><!-- --></a><h3>
ServerSocket</h3>
<pre>public <b>ServerSocket</b>(int&nbsp;port,
                    int&nbsp;backlog)
             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Creates a server socket and binds it to the specified local port 
 number, with the specified backlog. 
 A port number of <code>0</code> creates a socket on any 
 free port. 
 <p>
 The maximum queue length for incoming connection indications (a 
 request to connect) is set to the <code>backlog</code> parameter. If 
 a connection indication arrives when the queue is full, the 
 connection is refused. 
 </p><p>
 If the application has specified a server socket factory, that 
 factory's <code>createSocketImpl</code> method is called to create 
 the actual socket implementation. Otherwise a "plain" socket is created.
 </p><p>
 If there is a security manager, 
 its <code>checkListen</code> method is called
 with the <code>port</code> argument
 as its argument to ensure the operation is allowed. 
 This could result in a SecurityException.

 </p><p>The <code>backlog</code> argument must be a positive
 value greater than 0. If the value passed if equal or less
 than 0, then the default value will be assumed.
 </p><p>
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>port</code> - the specified port, or <code>0</code> to use
                      any free port.</dd><dd><code>backlog</code> - the maximum length of the queue.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when opening the socket.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its <code>checkListen</code> 
 method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setSocketFactory%28java.net.SocketImplFactory%29"><code>setSocketFactory(java.net.SocketImplFactory)</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkListen%28int%29"><code>SecurityManager.checkListen(int)</code></a></dd></dl>
<hr>

<a name="ServerSocket(int, int, java.net.InetAddress)"><!-- --></a><h3>
ServerSocket</h3>
<pre>public <b>ServerSocket</b>(int&nbsp;port,
                    int&nbsp;backlog,
                    <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;bindAddr)
             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Create a server with the specified port, listen backlog, and 
 local IP address to bind to.  The <i>bindAddr</i> argument
 can be used on a multi-homed host for a ServerSocket that
 will only accept connect requests to one of its addresses.
 If <i>bindAddr</i> is null, it will default accepting
 connections on any/all local addresses.
 The port must be between 0 and 65535, inclusive.
 
 <p>If there is a security manager, this method 
 calls its <code>checkListen</code> method
 with the <code>port</code> argument
 as its argument to ensure the operation is allowed. 
 This could result in a SecurityException.

 </p><p>The <code>backlog</code> argument must be a positive
 value greater than 0. If the value passed if equal or less
 than 0, then the default value will be assumed.
 </p><p>
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>port</code> - the local TCP port</dd><dd><code>backlog</code> - the listen backlog</dd><dd><code>bindAddr</code> - the local InetAddress the server will bind to
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and 
 its <code>checkListen</code> method doesn't allow the operation.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when opening the socket.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/SocketOptions.html"><code>SocketOptions</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/SocketImpl.html"><code>SocketImpl</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkListen%28int%29"><code>SecurityManager.checkListen(int)</code></a></dd></dl>

<!-- ============ METHOD DETAIL ========== -->

<a name="method_detail"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="1"><font size="+2">
<b>Method Detail</b></font></td>
</tr>
</tbody></table>

<a name="bind(java.net.SocketAddress)"><!-- --></a><h3>
bind</h3>
<pre>public void <b>bind</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint)
          throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Binds the <code>ServerSocket</code> to a specific address
 (IP address and port number).
 <p>
 If the address is <code>null</code>, then the system will pick up
 an ephemeral port and a valid local address to bind the socket.
 </p><p>
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>endpoint</code> - The IP address &amp; port number to bind to.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if the bind operation fails, or if the socket
			   is already bound.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a <code>SecurityManager</code> is present and
 its <code>checkListen</code> method doesn't allow the operation.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if endpoint is a
          SocketAddress subclass not supported by this socket</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="bind(java.net.SocketAddress, int)"><!-- --></a><h3>
bind</h3>
<pre>public void <b>bind</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;endpoint,
                 int&nbsp;backlog)
          throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Binds the <code>ServerSocket</code> to a specific address
 (IP address and port number).
 <p>
 If the address is <code>null</code>, then the system will pick up
 an ephemeral port and a valid local address to bind the socket.
 </p><p>
 The <code>backlog</code> argument must be a positive
 value greater than 0. If the value passed if equal or less
 than 0, then the default value will be assumed.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>endpoint</code> - The IP address &amp; port number to bind to.</dd><dd><code>backlog</code> - The listen backlog length.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if the bind operation fails, or if the socket
			   is already bound.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a <code>SecurityManager</code> is present and
 its <code>checkListen</code> method doesn't allow the operation.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if endpoint is a
          SocketAddress subclass not supported by this socket</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="getInetAddress()"><!-- --></a><h3>
getInetAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a> <b>getInetAddress</b>()</pre>
<dl>
<dd>Returns the local address of this server socket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the address to which this socket is connected,
          or <code>null</code> if the socket is not yet connected.</dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalPort()"><!-- --></a><h3>
getLocalPort</h3>
<pre>public int <b>getLocalPort</b>()</pre>
<dl>
<dd>Returns the port on which this socket is listening.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the port number to which this socket is listening or
	        -1 if the socket is not bound yet.</dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalSocketAddress()"><!-- --></a><h3>
getLocalSocketAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a> <b>getLocalSocketAddress</b>()</pre>
<dl>
<dd>Returns the address of the endpoint this socket is bound to, or
 <code>null</code> if it is not bound yet.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>SocketAddress</code> representing the local endpoint of this
	       socket, or <code>null</code> if it is not bound yet.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getInetAddress%28%29"><code>getInetAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getLocalPort%28%29"><code>getLocalPort()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="accept()"><!-- --></a><h3>
accept</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/Socket.html">Socket</a> <b>accept</b>()
              throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Listens for a connection to be made to this socket and accepts 
 it. The method blocks until a connection is made. 

 <p>A new Socket <code>s</code> is created and, if there 
 is a security manager, 
 the security manager's <code>checkAccept</code> method is called
 with <code>s.getInetAddress().getHostAddress()</code> and
 <code>s.getPort()</code>
 as its arguments to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the new Socket
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when waiting for a
               connection.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkListen</code> method doesn't allow the operation.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketTimeoutException.html">SocketTimeoutException</a></code> - if a timeout was previously set with setSoTimeout and
             the timeout has been reached.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html">IllegalBlockingModeException</a></code> - if this socket has an associated channel,
             and the channel is in non-blocking mode.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkAccept%28java.lang.String,%20int%29"><code>SecurityManager.checkAccept(java.lang.String, int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="implAccept(java.net.Socket)"><!-- --></a><h3>
implAccept</h3>
<pre>protected final void <b>implAccept</b>(<a href="file:///D:/progettodireti/api/java/net/Socket.html">Socket</a>&nbsp;s)
                         throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Subclasses of ServerSocket use this method to override accept()
 to return their own subclass of socket.  So a FooServerSocket
 will typically hand this method an <i>empty</i> FooSocket.  On
 return from implAccept the FooSocket will be connected to a client.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>s</code> - the Socket
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html">IllegalBlockingModeException</a></code> - if this socket has an associated channel,
         and the channel is in non-blocking mode
</dd><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when waiting 
 for a connection.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

</dl>
</dd>
</dl>
<hr>

<a name="close()"><!-- --></a><h3>
close</h3>
<pre>public void <b>close</b>()
           throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Closes this socket. 
 
 Any thread currently blocked in <a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#accept%28%29"><code>accept()</code></a> will throw
 a <a href="file:///D:/progettodireti/api/java/net/SocketException.html"><code>SocketException</code></a>.

 <p> If this socket has an associated channel then the channel is closed
 as well.
</p><p>
</p></dd><dd><dl>

<dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when closing the socket.</dd></dl>
</dd>
</dl>
<hr>

<a name="getChannel()"><!-- --></a><h3>
getChannel</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/nio/channels/ServerSocketChannel.html">ServerSocketChannel</a> <b>getChannel</b>()</pre>
<dl>
<dd>Returns the unique <a href="file:///D:/progettodireti/api/java/nio/channels/ServerSocketChannel.html"><code>ServerSocketChannel</code></a> object
 associated with this socket, if any.

 <p> A server socket will have a channel if, and only if, the channel
 itself was created via the <a href="file:///D:/progettodireti/api/java/nio/channels/ServerSocketChannel.html#open%28%29"><code>ServerSocketChannel.open</code></a>
 method.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the server-socket channel associated with this socket,
          or <tt>null</tt> if this socket was not created
          for a channel</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="isBound()"><!-- --></a><h3>
isBound</h3>
<pre>public boolean <b>isBound</b>()</pre>
<dl>
<dd>Returns the binding state of the ServerSocket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the ServerSocket succesfuly bound to an address</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="isClosed()"><!-- --></a><h3>
isClosed</h3>
<pre>public boolean <b>isClosed</b>()</pre>
<dl>
<dd>Returns the closed state of the ServerSocket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the socket has been closed</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="setSoTimeout(int)"><!-- --></a><h3>
setSoTimeout</h3>
<pre>public void <b>setSoTimeout</b>(int&nbsp;timeout)
                  throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable SO_TIMEOUT with the specified timeout, in
 milliseconds.  With this option set to a non-zero timeout,
 a call to accept() for this ServerSocket
 will block for only this amount of time.  If the timeout expires,
 a <b>java.net.SocketTimeoutException</b> is raised, though the
 ServerSocket is still valid.  The option <b>must</b> be enabled
 prior to entering the blocking operation to have effect.  The 
 timeout must be &gt; 0.
 A timeout of zero is interpreted as an infinite timeout.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>timeout</code> - the specified timeout, in milliseconds
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error in 
 the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getSoTimeout%28%29"><code>getSoTimeout()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getSoTimeout()"><!-- --></a><h3>
getSoTimeout</h3>
<pre>public int <b>getSoTimeout</b>()
                 throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Retrive setting for SO_TIMEOUT.  0 returns implies that the
 option is disabled (i.e., timeout of infinity).
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the SO_TIMEOUT value
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setSoTimeout%28int%29"><code>setSoTimeout(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setReuseAddress(boolean)"><!-- --></a><h3>
setReuseAddress</h3>
<pre>public void <b>setReuseAddress</b>(boolean&nbsp;on)
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable the SO_REUSEADDR socket option.
 <p>
 When a TCP connection is closed the connection may remain
 in a timeout state for a period of time after the connection
 is closed (typically known as the <tt>TIME_WAIT</tt> state 
 or <tt>2MSL</tt> wait state).
 For applications using a well known socket address or port 
 it may not be possible to bind a socket to the required
 <tt>SocketAddress</tt> if there is a connection in the
 timeout state involving the socket address or port. 
 </p><p>
 Enabling <tt>SO_REUSEADDR</tt> prior to binding the socket
 using <a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a> allows the socket to be
 bound even though a previous connection is in a timeout
 state.
 </p><p>
 When a <tt>ServerSocket</tt> is created the initial setting
 of <tt>SO_REUSEADDR</tt> is not defined. Applications can
 use <a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getReuseAddress%28%29"><code>getReuseAddress()</code></a> to determine the initial 
 setting of <tt>SO_REUSEADDR</tt>. 
 </p><p>
 The behaviour when <tt>SO_REUSEADDR</tt> is enabled or
 disabled after a socket is bound (See <a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#isBound%28%29"><code>isBound()</code></a>)
 is not defined.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - whether to enable or disable the socket option
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if an error occurs enabling or
            disabling the <tt>SO_RESUEADDR</tt> socket option,
		  or the socket is closed.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getReuseAddress%28%29"><code>getReuseAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#isBound%28%29"><code>isBound()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#isClosed%28%29"><code>isClosed()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getReuseAddress()"><!-- --></a><h3>
getReuseAddress</h3>
<pre>public boolean <b>getReuseAddress</b>()
                        throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Tests if SO_REUSEADDR is enabled.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>boolean</code> indicating whether or not SO_REUSEADDR is enabled.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setReuseAddress%28boolean%29"><code>setReuseAddress(boolean)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="toString()"><!-- --></a><h3>
toString</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/lang/String.html">String</a> <b>toString</b>()</pre>
<dl>
<dd>Returns the implementation address and implementation port of 
 this socket as a <code>String</code>.
<p>
</p></dd><dd><dl>
<dt><b>Overrides:</b></dt><dd><code><a href="file:///D:/progettodireti/api/java/lang/Object.html#toString%28%29">toString</a></code> in class <code><a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></code></dd></dl>
</dd>
<dd><dl>

<dt><b>Returns:</b></dt><dd>a string representation of this socket.</dd></dl>
</dd>
</dl>
<hr>

<a name="setSocketFactory(java.net.SocketImplFactory)"><!-- --></a><h3>
setSocketFactory</h3>
<pre>public static void <b>setSocketFactory</b>(<a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html">SocketImplFactory</a>&nbsp;fac)
                             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Sets the server socket implementation factory for the 
 application. The factory can be specified only once. 
 <p>
 When an application creates a new server socket, the socket 
 implementation factory's <code>createSocketImpl</code> method is 
 called to create the actual socket implementation. 
 </p><p>
 If there is a security manager, this method first calls
 the security manager's <code>checkSetFactory</code> method 
 to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>fac</code> - the desired factory.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when setting the
               socket factory.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the factory has already been defined.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkSetFactory</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/SocketImplFactory.html#createSocketImpl%28%29"><code>SocketImplFactory.createSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkSetFactory%28%29"><code>SecurityManager.checkSetFactory()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setReceiveBufferSize(int)"><!-- --></a><h3>
setReceiveBufferSize</h3>
<pre>public void <b>setReceiveBufferSize</b>(int&nbsp;size)
                          throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Sets a default proposed value for the SO_RCVBUF option for sockets 
 accepted from this <tt>ServerSocket</tt>. The value actually set 
 in the accepted socket must be determined by calling 
 <a href="file:///D:/progettodireti/api/java/net/Socket.html#getReceiveBufferSize%28%29"><code>Socket.getReceiveBufferSize()</code></a> after the socket 
 is returned by <a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#accept%28%29"><code>accept()</code></a>. 
 <p>
 The value of SO_RCVBUF is used both to set the size of the internal
 socket receive buffer, and to set the size of the TCP receive window
 that is advertized to the remote peer.
 </p><p>
 It is possible to change the value subsequently, by calling 
 <a href="file:///D:/progettodireti/api/java/net/Socket.html#setReceiveBufferSize%28int%29"><code>Socket.setReceiveBufferSize(int)</code></a>. However, if the application 
 wishes to allow a receive window larger than 64K bytes, as defined by RFC1323
 then the proposed value must be set in the ServerSocket <b>before</b> 
 it is bound to a local address. This implies, that the ServerSocket must be 
 created with the no-argument constructor, then setReceiveBufferSize() must 
 be called and lastly the ServerSocket is bound to an address by calling bind(). 
 </p><p>
 Failure to do this will not cause an error, and the buffer size may be set to the
 requested value but the TCP receive window in sockets accepted from 
 this ServerSocket will be no larger than 64K bytes.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>size</code> - the size to which to set the receive buffer
 size. This value must be greater than 0.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if the 
 value is 0 or is negative.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#getReceiveBufferSize%28%29"><code>getReceiveBufferSize()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getReceiveBufferSize()"><!-- --></a><h3>
getReceiveBufferSize</h3>
<pre>public int <b>getReceiveBufferSize</b>()
                         throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Gets the value of the SO_RCVBUF option for this <tt>ServerSocket</tt>, 
 that is the proposed buffer size that will be used for Sockets accepted
 from this <tt>ServerSocket</tt>.
 
 <p>Note, the value actually set in the accepted socket is determined by
 calling <a href="file:///D:/progettodireti/api/java/net/Socket.html#getReceiveBufferSize%28%29"><code>Socket.getReceiveBufferSize()</code></a>.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the value of the SO_RCVBUF option for this <tt>Socket</tt>.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as a TCP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/ServerSocket.html#setReceiveBufferSize%28int%29"><code>setReceiveBufferSize(int)</code></a></dd></dl>
</dd>
</dl>
<!-- ========= END OF CLASS DATA ========= -->
<hr>

<!-- ========== START OF NAVBAR ========== -->
<a name="navbar_bottom"><!-- --></a>
<table border="0" cellpadding="1" cellspacing="0" width="100%">
<tbody><tr>
<td colspan="3" class="NavBarCell1" bgcolor="#eeeeff">
<a name="navbar_bottom_firstrow"><!-- --></a>
<table border="0" cellpadding="0" cellspacing="3">
  <tbody><tr align="center" valign="top">
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td>
  <td class="NavBarCell1Rev" bgcolor="#ffffff"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/class-use/ServerSocket.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/index-files/index-1.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td>
  </tr>
</tbody></table>
</td>
<td rowspan="3" align="right" valign="top"><em>
<b>Java<sup><font size="-2">TM</font></sup>&nbsp;2&nbsp;Platform<br>Std.&nbsp;Ed. v1.4.0</b></em>
</td>
</tr>

<tr>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
&nbsp;<a href="file:///D:/progettodireti/api/java/net/PasswordAuthentication.html"><b>PREV CLASS</b></a>&nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/Socket.html"><b>NEXT CLASS</b></a></font></td>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
  <a href="file:///D:/progettodireti/api/index.html" target="_top"><b>FRAMES</b></a>  &nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/ServerSocket.html" target="_top"><b>NO FRAMES</b></a>  &nbsp;
&nbsp;
<script>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</script>
<noscript>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</noscript>
</font></td>
</tr>
<tr>
<td class="NavBarCell3" valign="top"><font size="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td>
<td class="NavBarCell3" valign="top"><font size="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td>
</tr>
</tbody></table>
<!-- =========== END OF NAVBAR =========== -->

<hr>
<font size="-1"><a href="http://java.sun.com/cgi-bin/bugreport.cgi">Submit a bug or feature</a><br>For further API reference and developer documentation, see <a href="file:///D:/progettodireti/relnotes/devdocs-vs-specs.html">Java 2 SDK SE Developer Documentation</a>.
That documentation contains more detailed, developer-targeted
descriptions, with conceptual overviews, definitions of terms,
workarounds, and working code examples. </font><p><font size="-1">Java, Java 2D, and JDBC are trademarks or registered trademarks of Sun Microsystems, Inc. in the US and other countries.<br>Copyright 1993-2002 Sun Microsystems, Inc. 901 San Antonio Road<br>Palo Alto, California, 94303, U.S.A.  All Rights Reserved.</font>
</p></body></html>