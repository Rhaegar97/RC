<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><head><!--NewPage--><!-- Generated by javadoc on Wed Jan 30 05:35:50 PST 2002 --><title>DatagramSocket (Java 2 Platform SE v1.4.0)</title>


<link rel="stylesheet" type="text/css" href="overview-frame_data/stylesheet.css" title="Style">
<script>
function asd()
{
parent.document.title="DatagramSocket (Java 2 Platform SE v1.4.0)";
}
</script></head>



<body onload="asd();" bgcolor="white">

<!-- ========== START OF NAVBAR ========== -->
<a name="navbar_top"><!-- --></a>
<table border="0" cellpadding="1" cellspacing="0" width="100%">
<tbody><tr>
<td colspan="3" class="NavBarCell1" bgcolor="#eeeeff">
<a name="navbar_top_firstrow"><!-- --></a>
<table border="0" cellpadding="0" cellspacing="3">
  <tbody><tr align="center" valign="top">
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td>
  <td class="NavBarCell1Rev" bgcolor="#ffffff"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/class-use/DatagramSocket.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/index-files/index-1.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td>
  </tr>
</tbody></table>
</td>
<td rowspan="3" align="right" valign="top"><em>
<b>Java<sup><font size="-2">TM</font></sup>&nbsp;2&nbsp;Platform<br>Std.&nbsp;Ed. v1.4.0</b></em>
</td>
</tr>

<tr>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
&nbsp;<a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html"><b>PREV CLASS</b></a>&nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/DatagramSocketImpl.html"><b>NEXT CLASS</b></a></font></td>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
  <a href="file:///D:/progettodireti/api/index.html" target="_top"><b>FRAMES</b></a>  &nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html" target="_top"><b>NO FRAMES</b></a>  &nbsp;
&nbsp;
<script>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</script>
<noscript>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</noscript>
</font></td>
</tr>
<tr>
<td class="NavBarCell3" valign="top"><font size="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td>
<td class="NavBarCell3" valign="top"><font size="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td>
</tr>
</tbody></table>
<!-- =========== END OF NAVBAR =========== -->

<hr>
<!-- ======== START OF CLASS DATA ======== -->
<h2>
<font size="-1">
java.net</font>
<br>
Class  DatagramSocket</h2>
<pre><a href="file:///D:/progettodireti/api/java/lang/Object.html">java.lang.Object</a>
  |
  +--<b>java.net.DatagramSocket</b>
</pre>
<dl>
<dt><b>Direct Known Subclasses:</b> </dt><dd><a href="file:///D:/progettodireti/api/java/net/MulticastSocket.html">MulticastSocket</a></dd>
</dl>
<hr>
<dl>
<dt>public class <b>DatagramSocket</b></dt><dt>extends <a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></dt></dl>

<p>
This class represents a socket for sending and receiving datagram packets.

 </p><p>A datagram socket is the sending or receiving point for a packet
 delivery service. Each packet sent or received on a datagram socket
 is individually addressed and routed. Multiple packets sent from
 one machine to another may be routed differently, and may arrive in
 any order.

 </p><p>UDP broadcasts sends are always enabled on a DatagramSocket.
 In order to receive broadcast packets a DatagramSocket
 should be bound to the wildcard address. In some
 implementations, broadcast packets may also be received when
 a DatagramSocket is bound to a more specific address.
 </p><p>
 Example:
 <code>
		DatagramSocket s = new DatagramSocket(null);
		s.bind(new InetSocketAddress(8888));
 </code>
 Which is equivalent to:
 <code>
		DatagramSocket s = new DatagramSocket(8888);
 </code>
 Both cases will create a DatagramSocket able to receive broadcasts on
 UDP port 8888.
</p><p>

</p><p>
</p><dl>
<dt><b>Since:</b></dt><dd>JDK1.0</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html"><code>DatagramPacket</code></a>, 
<a href="file:///D:/progettodireti/api/java/nio/channels/DatagramChannel.html"><code>DatagramChannel</code></a></dd></dl>
<hr>

<p>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<a name="constructor_summary"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="2"><font size="+2">
<b>Constructor Summary</b></font></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#DatagramSocket%28%29">DatagramSocket</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a datagram socket and binds it to any available port
 on the local host machine.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>protected </code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#DatagramSocket%28java.net.DatagramSocketImpl%29">DatagramSocket</a></b>(<a href="file:///D:/progettodireti/api/java/net/DatagramSocketImpl.html">DatagramSocketImpl</a>&nbsp;impl)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates an unbound datagram socket with the specified
 DatagramSocketImpl.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#DatagramSocket%28int%29">DatagramSocket</a></b>(int&nbsp;port)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructs a datagram socket and binds it to the specified port
 on the local host machine.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#DatagramSocket%28int,%20java.net.InetAddress%29">DatagramSocket</a></b>(int&nbsp;port,
               <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;laddr)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a datagram socket, bound to the specified local
 address.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#DatagramSocket%28java.net.SocketAddress%29">DatagramSocket</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;bindaddr)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a datagram socket, bound to the specified local
 socket address.</td>
</tr>
</tbody></table>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<a name="method_summary"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="2"><font size="+2">
<b>Method Summary</b></font></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#bind%28java.net.SocketAddress%29">bind</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;addr)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Binds this DatagramSocket to a specific address &amp; port.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#close%28%29">close</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Closes this datagram socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#connect%28java.net.InetAddress,%20int%29">connect</a></b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;address,
        int&nbsp;port)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects the socket to a remote address for this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#connect%28java.net.SocketAddress%29">connect</a></b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;addr)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Connects
this socket to a remote socket address (IP address + port number).</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#disconnect%28%29">disconnect</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Disconnects the socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getBroadcast%28%29">getBroadcast</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if SO_BROADCAST is enabled.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/nio/channels/DatagramChannel.html">DatagramChannel</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getChannel%28%29">getChannel</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the unique <a href="file:///D:/progettodireti/api/java/nio/channels/DatagramChannel.html"><code>DatagramChannel</code></a> object
 associated with this datagram socket, if any.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getInetAddress%28%29">getInetAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the address to which this socket is connected.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getLocalAddress%28%29">getLocalAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the local address to which the socket is bound.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getLocalPort%28%29">getLocalPort</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the
port number on the local host to which this socket is bound.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getLocalSocketAddress%28%29">getLocalSocketAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the address of the endpoint this socket is bound to, or
 <code>null</code> if it is not bound yet.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getPort%28%29">getPort</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the port for this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getReceiveBufferSize%28%29">getReceiveBufferSize</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get value of the SO_RCVBUF option for this <tt>DatagramSocket</tt>, that is the
 buffer size used by the platform for input on this <tt>DatagramSocket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a></code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getRemoteSocketAddress%28%29">getRemoteSocketAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the address of the endpoint this socket is connected to, or
 <code>null if it is unconnected.</code></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getReuseAddress%28%29">getReuseAddress</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tests if SO_REUSEADDR is enabled.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getSendBufferSize%28%29">getSendBufferSize</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get value of the SO_SNDBUF option for this <tt>DatagramSocket</tt>, that is the
 buffer size used by the platform for output on this <tt>DatagramSocket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getSoTimeout%28%29">getSoTimeout</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Retrive setting for SO_TIMEOUT.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;int</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getTrafficClass%28%29">getTrafficClass</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets traffic class or type-of-service in the IP datagram 
 header for packets sent from this DatagramSocket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#isBound%28%29">isBound</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the binding state of the socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#isClosed%28%29">isClosed</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns wether the socket is closed or not.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;boolean</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#isConnected%28%29">isConnected</a></b>()</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the connection state of the socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#receive%28java.net.DatagramPacket%29">receive</a></b>(<a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html">DatagramPacket</a>&nbsp;p)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Receives a datagram packet from this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#send%28java.net.DatagramPacket%29">send</a></b>(<a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html">DatagramPacket</a>&nbsp;p)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sends a datagram packet from this socket.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setBroadcast%28boolean%29">setBroadcast</a></b>(boolean&nbsp;on)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable SO_BROADCAST.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>static&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setDatagramSocketImplFactory%28java.net.DatagramSocketImplFactory%29">setDatagramSocketImplFactory</a></b>(<a href="file:///D:/progettodireti/api/java/net/DatagramSocketImplFactory.html">DatagramSocketImplFactory</a>&nbsp;fac)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the datagram socket implementation factory for the
 application.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setReceiveBufferSize%28int%29">setReceiveBufferSize</a></b>(int&nbsp;size)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SO_RCVBUF option to the specified value for this
 <tt>DatagramSocket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setReuseAddress%28boolean%29">setReuseAddress</a></b>(boolean&nbsp;on)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable the SO_REUSEADDR socket option.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setSendBufferSize%28int%29">setSendBufferSize</a></b>(int&nbsp;size)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the SO_SNDBUF option to the specified value for this
 <tt>DatagramSocket</tt>.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setSoTimeout%28int%29">setSoTimeout</a></b>(int&nbsp;timeout)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enable/disable SO_TIMEOUT with the specified timeout, in
  milliseconds.</td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td align="right" valign="top" width="1%"><font size="-1">
<code>&nbsp;void</code></font></td>
<td><code><b><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setTrafficClass%28int%29">setTrafficClass</a></b>(int&nbsp;tc)</code>

<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets traffic class or type-of-service octet in the IP
 datagram header for datagrams sent from this DatagramSocket.</td>
</tr>
</tbody></table>
&nbsp;<a name="methods_inherited_from_class_java.lang.Object"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableSubHeadingColor" bgcolor="#eeeeff">
<td><b>Methods inherited from class java.lang.<a href="file:///D:/progettodireti/api/java/lang/Object.html">Object</a></b></td>
</tr>
<tr class="TableRowColor" bgcolor="white">
<td><code><a href="file:///D:/progettodireti/api/java/lang/Object.html#clone%28%29">clone</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#equals%28java.lang.Object%29">equals</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#finalize%28%29">finalize</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#getClass%28%29">getClass</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#hashCode%28%29">hashCode</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#notify%28%29">notify</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#notifyAll%28%29">notifyAll</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#toString%28%29">toString</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28%29">wait</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28long%29">wait</a>, <a href="file:///D:/progettodireti/api/java/lang/Object.html#wait%28long,%20int%29">wait</a></code></td>
</tr>
</tbody></table>
&nbsp;
</p><p>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<a name="constructor_detail"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="1"><font size="+2">
<b>Constructor Detail</b></font></td>
</tr>
</tbody></table>

<a name="DatagramSocket()"><!-- --></a></p><h3>
DatagramSocket</h3>
<pre>public <b>DatagramSocket</b>()
               throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Constructs a datagram socket and binds it to any available port
 on the local host machine.  The socket will be bound to the wildcard
 address, an IP address chosen by the kernel.
 
 <p>If there is a security manager, 
 its <code>checkListen</code> method is first called
 with 0 as its argument to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>

</p></dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the socket could not be opened,
               or the socket could not bind to the specified local port.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkListen</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkListen%28int%29"><code>SecurityManager.checkListen(int)</code></a></dd></dl>
<hr>

<a name="DatagramSocket(java.net.DatagramSocketImpl)"><!-- --></a><h3>
DatagramSocket</h3>
<pre>protected <b>DatagramSocket</b>(<a href="file:///D:/progettodireti/api/java/net/DatagramSocketImpl.html">DatagramSocketImpl</a>&nbsp;impl)</pre>
<dl>
<dd>Creates an unbound datagram socket with the specified
 DatagramSocketImpl.
<p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>impl</code> - an instance of a <b>DatagramSocketImpl</b>
        the subclass wishes to use on the DatagramSocket.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
<hr>

<a name="DatagramSocket(java.net.SocketAddress)"><!-- --></a><h3>
DatagramSocket</h3>
<pre>public <b>DatagramSocket</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;bindaddr)
               throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Creates a datagram socket, bound to the specified local
 socket address.
 <p>
 If, if the address is <code>null</code>, creates an unbound socket.
 </p><p>
 </p><p>If there is a security manager, 
 its <code>checkListen</code> method is first called
 with the port from the socket address
 as its argument to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>bindaddr</code> - local socket address to bind, or <code>null</code>
		       for an unbound socket.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the socket could not be opened,
               or the socket could not bind to the specified local port.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkListen</code> method doesn't allow the operation.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkListen%28int%29"><code>SecurityManager.checkListen(int)</code></a></dd></dl>
<hr>

<a name="DatagramSocket(int)"><!-- --></a><h3>
DatagramSocket</h3>
<pre>public <b>DatagramSocket</b>(int&nbsp;port)
               throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Constructs a datagram socket and binds it to the specified port
 on the local host machine.  The socket will be bound to the wildcard
 address, an IP address chosen by the kernel.
 
 <p>If there is a security manager, 
 its <code>checkListen</code> method is first called
 with the <code>port</code> argument
 as its argument to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>port</code> - port to use.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the socket could not be opened,
               or the socket could not bind to the specified local port.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkListen</code> method doesn't allow the operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkListen%28int%29"><code>SecurityManager.checkListen(int)</code></a></dd></dl>
<hr>

<a name="DatagramSocket(int, java.net.InetAddress)"><!-- --></a><h3>
DatagramSocket</h3>
<pre>public <b>DatagramSocket</b>(int&nbsp;port,
                      <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;laddr)
               throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Creates a datagram socket, bound to the specified local
 address.  The local port must be between 0 and 65535 inclusive.
 If the IP address is 0.0.0.0, the socket will be bound to the
 wildcard address, an IP address chosen by the kernel.
 
 <p>If there is a security manager, 
 its <code>checkListen</code> method is first called
 with the <code>port</code> argument
 as its argument to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dt><b>Parameters:</b></dt><dd><code>port</code> - local port to use</dd><dd><code>laddr</code> - local address to bind
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the socket could not be opened,
               or the socket could not bind to the specified local port.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkListen</code> method doesn't allow the operation.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkListen%28int%29"><code>SecurityManager.checkListen(int)</code></a></dd></dl>

<!-- ============ METHOD DETAIL ========== -->

<a name="method_detail"><!-- --></a>
<table border="1" cellpadding="3" cellspacing="0" width="100%">
<tbody><tr class="TableHeadingColor" bgcolor="#ccccff">
<td colspan="1"><font size="+2">
<b>Method Detail</b></font></td>
</tr>
</tbody></table>

<a name="bind(java.net.SocketAddress)"><!-- --></a><h3>
bind</h3>
<pre>public void <b>bind</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;addr)
          throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Binds this DatagramSocket to a specific address &amp; port.
 <p>
 If the address is <code>null</code>, then the system will pick up
 an ephemeral port and a valid local address to bind the socket.
</p><p>
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>addr</code> - The address &amp; port to bind to.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if any error happens during the bind, or if the
		socket is already bound.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkListen</code> method doesn't allow the operation.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if addr is a SocketAddress subclass
         not supported by this socket.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="connect(java.net.InetAddress, int)"><!-- --></a><h3>
connect</h3>
<pre>public void <b>connect</b>(<a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a>&nbsp;address,
                    int&nbsp;port)</pre>
<dl>
<dd>Connects the socket to a remote address for this socket. When a
 socket is connected to a remote address, packets may only be
 sent to or received from that address. By default a datagram
 socket is not connected.

 <p>If the remote destination to which the socket is connected does not
 exist, or is otherwise unreachable, and if an ICMP destination unreachable
 packet has been received for that address, then a subsequent call to 
 send or receive may throw a PortUnreachableException. Note, there is no 
 guarantee that the exception will be thrown.

 </p><p>A caller's permission to send and receive datagrams to a
 given host and port are checked at connect time. When a socket
 is connected, receive and send <b>will not
 perform any security checks</b> on incoming and outgoing
 packets, other than matching the packet's and the socket's
 address and port. On a send operation, if the packet's address
 is set and the packet's address and the socket's address do not
 match, an IllegalArgumentException will be thrown. A socket
 connected to a multicast address may only be used to send packets.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>address</code> - the remote address for the socket</dd><dd><code>port</code> - the remote port for the socket.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if the address is null,
 or the port is out of range.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if the caller is not allowed to
 send datagrams to and receive datagrams from the address and port.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#disconnect%28%29"><code>disconnect()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#send%28java.net.DatagramPacket%29"><code>send(java.net.DatagramPacket)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#receive%28java.net.DatagramPacket%29"><code>receive(java.net.DatagramPacket)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="connect(java.net.SocketAddress)"><!-- --></a><h3>
connect</h3>
<pre>public void <b>connect</b>(<a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a>&nbsp;addr)
             throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Connects this socket to a remote socket address (IP address + port number).
 <p>
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>addr</code> - The remote address.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the connect fails
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if addr is null or addr is a SocketAddress
		subclass not supported by this socket</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#connect%28java.net.InetAddress,%20int%29"><code>connect(java.net.InetAddress, int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="disconnect()"><!-- --></a><h3>
disconnect</h3>
<pre>public void <b>disconnect</b>()</pre>
<dl>
<dd>Disconnects the socket. This does nothing if the socket is not
 connected.
<p>
</p></dd><dd><dl>
<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#connect%28java.net.InetAddress,%20int%29"><code>connect(java.net.InetAddress, int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="isBound()"><!-- --></a><h3>
isBound</h3>
<pre>public boolean <b>isBound</b>()</pre>
<dl>
<dd>Returns the binding state of the socket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the socket succesfuly bound to an address</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="isConnected()"><!-- --></a><h3>
isConnected</h3>
<pre>public boolean <b>isConnected</b>()</pre>
<dl>
<dd>Returns the connection state of the socket.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the socket succesfuly connected to a server</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="getInetAddress()"><!-- --></a><h3>
getInetAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a> <b>getInetAddress</b>()</pre>
<dl>
<dd>Returns the address to which this socket is connected. Returns null
 if the socket is not connected.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the address to which this socket is connected.</dd></dl>
</dd>
</dl>
<hr>

<a name="getPort()"><!-- --></a><h3>
getPort</h3>
<pre>public int <b>getPort</b>()</pre>
<dl>
<dd>Returns the port for this socket. Returns -1 if the socket is not
 connected.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the port to which this socket is connected.</dd></dl>
</dd>
</dl>
<hr>

<a name="getRemoteSocketAddress()"><!-- --></a><h3>
getRemoteSocketAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a> <b>getRemoteSocketAddress</b>()</pre>
<dl>
<dd>Returns the address of the endpoint this socket is connected to, or
 <code>null if it is unconnected.
</code><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>SocketAddress</code> reprensenting the remote endpoint of this
	       socket, or <code>null</code> if it is not connected yet.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getInetAddress%28%29"><code>getInetAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getPort%28%29"><code>getPort()</code></a>, 
<code>#connect(SocketAddress, int)</code>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#connect%28java.net.SocketAddress%29"><code>connect(SocketAddress)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalSocketAddress()"><!-- --></a><h3>
getLocalSocketAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/SocketAddress.html">SocketAddress</a> <b>getLocalSocketAddress</b>()</pre>
<dl>
<dd>Returns the address of the endpoint this socket is bound to, or
 <code>null</code> if it is not bound yet.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>SocketAddress</code> representing the local endpoint of this
	       socket, or <code>null</code> if it is not bound yet.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getLocalAddress%28%29"><code>getLocalAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getLocalPort%28%29"><code>getLocalPort()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="send(java.net.DatagramPacket)"><!-- --></a><h3>
send</h3>
<pre>public void <b>send</b>(<a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html">DatagramPacket</a>&nbsp;p)
          throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Sends a datagram packet from this socket. The
 <code>DatagramPacket</code> includes information indicating the
 data to be sent, its length, the IP address of the remote host,
 and the port number on the remote host.

 <p>If there is a security manager, and the socket is not currently
 connected to a remote address, this method first performs some
 security checks. First, if <code>p.getAddress().isMulticastAddress()</code>
 is true, this method calls the
 security manager's <code>checkMulticast</code> method
 with <code>p.getAddress()</code> as its argument.
 If the evaluation of that expression is false,
 this method instead calls the security manager's 
 <code>checkConnect</code> method with arguments
 <code>p.getAddress().getHostAddress()</code> and
 <code>p.getPort()</code>. Each call to a security manager method
 could result in a SecurityException if the operation is not allowed.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>p</code> - the <code>DatagramPacket</code> to be sent.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkMulticast</code> or <code>checkConnect</code> 
             method doesn't allow the send.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/PortUnreachableException.html">PortUnreachableException</a></code> - may be thrown if the socket is connected
             to a currently unreachable destination. Note, there is no 
 		   guarantee that the exception will be thrown.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html">IllegalBlockingModeException</a></code> - if this socket has an associated channel,
             and the channel is in non-blocking mode.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html"><code>DatagramPacket</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkMulticast%28java.net.InetAddress%29"><code>SecurityManager.checkMulticast(InetAddress)</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="receive(java.net.DatagramPacket)"><!-- --></a><h3>
receive</h3>
<pre>public void <b>receive</b>(<a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html">DatagramPacket</a>&nbsp;p)
             throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Receives a datagram packet from this socket. When this method
 returns, the <code>DatagramPacket</code>'s buffer is filled with
 the data received. The datagram packet also contains the sender's
 IP address, and the port number on the sender's machine.
 <p>
 This method blocks until a datagram is received. The
 <code>length</code> field of the datagram packet object contains
 the length of the received message. If the message is longer than
 the packet's length, the message is truncated.
 </p><p>
 If there is a security manager, a packet cannot be received if the
 security manager's <code>checkAccept</code> method
 does not allow it.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>p</code> - the <code>DatagramPacket</code> into which to place
                 the incoming data.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketTimeoutException.html">SocketTimeoutException</a></code> - if setSoTimeout was previously called
		       and the timeout has expired.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/PortUnreachableException.html">PortUnreachableException</a></code> - may be thrown if the socket is connected
       	   to a currently unreachable destination. Note, there is no guarantee that the
       	   exception will be thrown.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/nio/channels/IllegalBlockingModeException.html">IllegalBlockingModeException</a></code> - if this socket has an associated channel,
             and the channel is in non-blocking mode.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html"><code>DatagramPacket</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html"><code>DatagramSocket</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalAddress()"><!-- --></a><h3>
getLocalAddress</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/net/InetAddress.html">InetAddress</a> <b>getLocalAddress</b>()</pre>
<dl>
<dd>Gets the local address to which the socket is bound.

 <p>If there is a security manager, its
 <code>checkConnect</code> method is first called
 with the host address and <code>-1</code>
 as its arguments to see if the operation is allowed.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the local address to which the socket is bound, or
		an <code>InetAddress</code> representing any local
		address if either the socket is not bound, or
		the security manager <code>checkConnect</code>
		method does not allow the operation</dd><dt><b>Since:</b></dt><dd>1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkConnect%28java.lang.String,%20int%29"><code>SecurityManager.checkConnect(java.lang.String, int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getLocalPort()"><!-- --></a><h3>
getLocalPort</h3>
<pre>public int <b>getLocalPort</b>()</pre>
<dl>
<dd>Returns the port number on the local host to which this socket is bound.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the port number on the local host to which this socket is bound.</dd></dl>
</dd>
</dl>
<hr>

<a name="setSoTimeout(int)"><!-- --></a><h3>
setSoTimeout</h3>
<pre>public void <b>setSoTimeout</b>(int&nbsp;timeout)
                  throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable SO_TIMEOUT with the specified timeout, in
  milliseconds. With this option set to a non-zero timeout,
  a call to receive() for this DatagramSocket
  will block for only this amount of time.  If the timeout expires,
  a <b>java.net.SocketTimeoutException</b> is raised, though the
  DatagramSocket is still valid.  The option <b>must</b> be enabled
  prior to entering the blocking operation to have effect.  The
  timeout must be &gt; 0.
  A timeout of zero is interpreted as an infinite timeout.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>timeout</code> - the specified timeout in milliseconds.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error in the underlying protocol, such as an UDP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getSoTimeout%28%29"><code>getSoTimeout()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getSoTimeout()"><!-- --></a><h3>
getSoTimeout</h3>
<pre>public int <b>getSoTimeout</b>()
                 throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Retrive setting for SO_TIMEOUT.  0 returns implies that the
 option is disabled (i.e., timeout of infinity).
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the setting for SO_TIMEOUT
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error in the underlying protocol, such as an UDP error.</dd><dt><b>Since:</b></dt><dd>JDK1.1</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setSoTimeout%28int%29"><code>setSoTimeout(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setSendBufferSize(int)"><!-- --></a><h3>
setSendBufferSize</h3>
<pre>public void <b>setSendBufferSize</b>(int&nbsp;size)
                       throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Sets the SO_SNDBUF option to the specified value for this
 <tt>DatagramSocket</tt>. The SO_SNDBUF option is used by the 
 network implementation as a hint to size the underlying
 network I/O buffers. The SO_SNDBUF setting may also be used 
 by the network implementation to determine the maximum size
 of the packet that can be sent on this socket.
 <p>
 As SO_SNDBUF is a hint, applications that want to verify
 what size the buffer is should call <a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getSendBufferSize%28%29"><code>getSendBufferSize()</code></a>.
 </p><p>
 Increasing the buffer size may allow multiple outgoing packets 
 to be queued by the network implementation when the send rate
 is high. 
 </p><p>
 Note: If <code>#send()</code> is used to send a 
 <code>DatagramPacket</code> that is larger than the setting
 of SO_SNDBUF then it is implementation specific if the
 packet is sent or discarded.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>size</code> - the size to which to set the send buffer
 size. This value must be greater than 0.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error 
 in the underlying protocol, such as an UDP error.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if the value is 0 or is
 negative.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getSendBufferSize%28%29"><code>getSendBufferSize()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getSendBufferSize()"><!-- --></a><h3>
getSendBufferSize</h3>
<pre>public int <b>getSendBufferSize</b>()
                      throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Get value of the SO_SNDBUF option for this <tt>DatagramSocket</tt>, that is the
 buffer size used by the platform for output on this <tt>DatagramSocket</tt>.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the value of the SO_SNDBUF option for this <tt>DatagramSocket</tt>
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error in 
 the underlying protocol, such as an UDP error.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setSendBufferSize%28int%29"><code>setSendBufferSize(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setReceiveBufferSize(int)"><!-- --></a><h3>
setReceiveBufferSize</h3>
<pre>public void <b>setReceiveBufferSize</b>(int&nbsp;size)
                          throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Sets the SO_RCVBUF option to the specified value for this
 <tt>DatagramSocket</tt>. The SO_RCVBUF option is used by the
 the network implementation as a hint to size the underlying
 network I/O buffers. The SO_RCVBUF setting may also be used
 by the network implementation to determine the maximum size
 of the packet that can be received on this socket.
 <p>
 Because SO_RCVBUF is a hint, applications that want to
 verify what size the buffers were set to should call
 <a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getReceiveBufferSize%28%29"><code>getReceiveBufferSize()</code></a>.
 </p><p>
 Increasing SO_RCVBUF may allow the network implementation
 to buffer multiple packets when packets arrive faster than
 are being received using <code>#receive()</code>.
 </p><p>
 Note: It is implementation specific if a packet larger
 than SO_RCVBUF can be received.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>size</code> - the size to which to set the receive buffer
 size. This value must be greater than 0.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error in 
 the underlying protocol, such as an UDP error.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/IllegalArgumentException.html">IllegalArgumentException</a></code> - if the value is 0 or is
 negative.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getReceiveBufferSize%28%29"><code>getReceiveBufferSize()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getReceiveBufferSize()"><!-- --></a><h3>
getReceiveBufferSize</h3>
<pre>public int <b>getReceiveBufferSize</b>()
                         throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Get value of the SO_RCVBUF option for this <tt>DatagramSocket</tt>, that is the
 buffer size used by the platform for input on this <tt>DatagramSocket</tt>.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the value of the SO_RCVBUF option for this <tt>DatagramSocket</tt>
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error in the underlying protocol, such as an UDP error.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setReceiveBufferSize%28int%29"><code>setReceiveBufferSize(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setReuseAddress(boolean)"><!-- --></a><h3>
setReuseAddress</h3>
<pre>public void <b>setReuseAddress</b>(boolean&nbsp;on)
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable the SO_REUSEADDR socket option.
 <p>
 For UDP sockets it may be necessary to bind more than one
 socket to the same socket address. This is typically for the
 purpose of receiving multicast packets
 (See <code>#java.net.MulticastSocket</code>). The
 <tt>SO_REUSEADDR</tt> socket option allows multiple
 sockets to be bound to the same socket address if the
 <tt>SO_REUSEADDR</tt> socket option is enabled prior
 to binding the socket using <a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a>.
 </p><p>
 When a <tt>DatagramSocket</tt> is created the initial setting
 of <tt>SO_REUSEADDR</tt> is disabled.
 </p><p>
 The behaviour when <tt>SO_REUSEADDR</tt> is enabled or
 disabled after a socket is bound (See <a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#isBound%28%29"><code>isBound()</code></a>)
 is not defined.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - whether to enable or disable the
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if an error occurs enabling or
            disabling the <tt>SO_RESUEADDR</tt> socket option,
	   	  or the socket is closed.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getReuseAddress%28%29"><code>getReuseAddress()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#bind%28java.net.SocketAddress%29"><code>bind(SocketAddress)</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#isBound%28%29"><code>isBound()</code></a>, 
<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#isClosed%28%29"><code>isClosed()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getReuseAddress()"><!-- --></a><h3>
getReuseAddress</h3>
<pre>public boolean <b>getReuseAddress</b>()
                        throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Tests if SO_REUSEADDR is enabled.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>boolean</code> indicating whether or not SO_REUSEADDR is enabled.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as an UDP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setReuseAddress%28boolean%29"><code>setReuseAddress(boolean)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setBroadcast(boolean)"><!-- --></a><h3>
setBroadcast</h3>
<pre>public void <b>setBroadcast</b>(boolean&nbsp;on)
                  throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Enable/disable SO_BROADCAST.
<p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>on</code> - whether or not to have broadcast turned on.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as an UDP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getBroadcast%28%29"><code>getBroadcast()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getBroadcast()"><!-- --></a><h3>
getBroadcast</h3>
<pre>public boolean <b>getBroadcast</b>()
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Tests if SO_BROADCAST is enabled.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>a <code>boolean</code> indicating whether or not SO_BROADCAST is enabled.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error
 in the underlying protocol, such as an UDP error.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setBroadcast%28boolean%29"><code>setBroadcast(boolean)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="setTrafficClass(int)"><!-- --></a><h3>
setTrafficClass</h3>
<pre>public void <b>setTrafficClass</b>(int&nbsp;tc)
                     throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Sets traffic class or type-of-service octet in the IP
 datagram header for datagrams sent from this DatagramSocket.
 As the underlying network implementation may ignore this
 value applications should consider it a hint.

 <p> The tc <b>must</b> be in the range <code> 0 &lt;= tc &lt;=
 255</code> or an IllegalArgumentException will be thrown.
 </p><p>Notes:
 </p><p> for Internet Protocol v4 the value consists of an octet
 with precedence and TOS fields as detailed in RFC 1349. The
 TOS field is bitset created by bitwise-or'ing values such
 the following :-
 </p><p>
 </p><ul>
 <li><code>IPTOS_LOWCOST (0x02)</code></li>
 <li><code>IPTOS_RELIABILITY (0x04)</code></li>
 <li><code>IPTOS_THROUGHPUT (0x08)</code></li>
 <li><code>IPTOS_LOWDELAY (0x10)</code></li>
 </ul>
 The last low order bit is always ignored as this
 corresponds to the MBZ (must be zero) bit.
 <p>
 Setting bits in the precedence field may result in a 
 SocketException indicating that the operation is not
 permitted.
 </p><p>
 for Internet Protocol v6 <code>tc</code> is the value that 
 would be placed into the sin6_flowinfo field of the IP header.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>tc</code> - an <code>int</code> value for the bitset.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error setting the
 traffic class or type-of-service</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#getTrafficClass%28%29"><code>getTrafficClass()</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="getTrafficClass()"><!-- --></a><h3>
getTrafficClass</h3>
<pre>public int <b>getTrafficClass</b>()
                    throws <a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></pre>
<dl>
<dd>Gets traffic class or type-of-service in the IP datagram 
 header for packets sent from this DatagramSocket.
 <p>
 As the underlying network implementation may ignore the
 traffic class or type-of-service set using <code>#setTrafficClass()</code>
 this method may return a different value than was previously
 set using the <code>#setTrafficClass()</code> method on this 
 DatagramSocket.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the traffic class or type-of-service already set
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if there is an error obtaining the
 traffic class or type-of-service value.</dd><dt><b>Since:</b></dt><dd>1.4</dd>

<dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html#setTrafficClass%28int%29"><code>setTrafficClass(int)</code></a></dd></dl>
</dd>
</dl>
<hr>

<a name="close()"><!-- --></a><h3>
close</h3>
<pre>public void <b>close</b>()</pre>
<dl>
<dd>Closes this datagram socket.
 <p>
 Any thread currently blocked in {#link receive} upon this socket
 will throw a <a href="file:///D:/progettodireti/api/java/net/SocketException.html"><code>SocketException</code></a>.

 </p><p> If this socket has an associated channel then the channel is closed
 as well.
</p><p>
</p></dd><dd><dl>
</dl>
</dd>
</dl>
<hr>

<a name="isClosed()"><!-- --></a><h3>
isClosed</h3>
<pre>public boolean <b>isClosed</b>()</pre>
<dl>
<dd>Returns wether the socket is closed or not.
<p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>true if the socket has been closed</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="getChannel()"><!-- --></a><h3>
getChannel</h3>
<pre>public <a href="file:///D:/progettodireti/api/java/nio/channels/DatagramChannel.html">DatagramChannel</a> <b>getChannel</b>()</pre>
<dl>
<dd>Returns the unique <a href="file:///D:/progettodireti/api/java/nio/channels/DatagramChannel.html"><code>DatagramChannel</code></a> object
 associated with this datagram socket, if any.

 <p> A datagram socket will have a channel if, and only if, the channel
 itself was created via the <a href="file:///D:/progettodireti/api/java/nio/channels/DatagramChannel.html#open%28%29"><code>DatagramChannel.open</code></a> method.
</p><p>
</p></dd><dd><dl>

<dt><b>Returns:</b></dt><dd>the datagram channel associated with this datagram socket,
          or <tt>null</tt> if this socket was not created for a channel</dd><dt><b>Since:</b></dt><dd>1.4</dd>

</dl>
</dd>
</dl>
<hr>

<a name="setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)"><!-- --></a><h3>
setDatagramSocketImplFactory</h3>
<pre>public static void <b>setDatagramSocketImplFactory</b>(<a href="file:///D:/progettodireti/api/java/net/DatagramSocketImplFactory.html">DatagramSocketImplFactory</a>&nbsp;fac)
                                         throws <a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></pre>
<dl>
<dd>Sets the datagram socket implementation factory for the
 application. The factory can be specified only once.
 <p>
 When an application creates a new datagram socket, the socket
 implementation factory's <code>createDatagramSocketImpl</code> method is
 called to create the actual datagram socket implementation.
 
 </p><p>If there is a security manager, this method first calls
 the security manager's <code>checkSetFactory</code> method 
 to ensure the operation is allowed. 
 This could result in a SecurityException.
</p><p>
</p></dd><dd><dl>
<dt><b>Parameters:</b></dt><dd><code>fac</code> - the desired factory.
</dd><dt><b>Throws:</b>
</dt><dd><code><a href="file:///D:/progettodireti/api/java/io/IOException.html">IOException</a></code> - if an I/O error occurs when setting the
              datagram socket factory.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/net/SocketException.html">SocketException</a></code> - if the factory is already defined.
</dd><dd><code><a href="file:///D:/progettodireti/api/java/lang/SecurityException.html">SecurityException</a></code> - if a security manager exists and its  
             <code>checkSetFactory</code> method doesn't allow the 
      operation.</dd><dt><b>See Also:</b></dt><dd><a href="file:///D:/progettodireti/api/java/net/DatagramSocketImplFactory.html#createDatagramSocketImpl%28%29"><code>DatagramSocketImplFactory.createDatagramSocketImpl()</code></a>, 
<a href="file:///D:/progettodireti/api/java/lang/SecurityManager.html#checkSetFactory%28%29"><code>SecurityManager.checkSetFactory()</code></a></dd></dl>
</dd>
</dl>
<!-- ========= END OF CLASS DATA ========= -->
<hr>

<!-- ========== START OF NAVBAR ========== -->
<a name="navbar_bottom"><!-- --></a>
<table border="0" cellpadding="1" cellspacing="0" width="100%">
<tbody><tr>
<td colspan="3" class="NavBarCell1" bgcolor="#eeeeff">
<a name="navbar_bottom_firstrow"><!-- --></a>
<table border="0" cellpadding="0" cellspacing="3">
  <tbody><tr align="center" valign="top">
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/overview-summary.html"><font class="NavBarFont1"><b>Overview</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-summary.html"><font class="NavBarFont1"><b>Package</b></font></a>&nbsp;</td>
  <td class="NavBarCell1Rev" bgcolor="#ffffff"> &nbsp;<font class="NavBarFont1Rev"><b>Class</b></font>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/class-use/DatagramSocket.html"><font class="NavBarFont1"><b>Use</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/java/net/package-tree.html"><font class="NavBarFont1"><b>Tree</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/deprecated-list.html"><font class="NavBarFont1"><b>Deprecated</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/index-files/index-1.html"><font class="NavBarFont1"><b>Index</b></font></a>&nbsp;</td>
  <td class="NavBarCell1" bgcolor="#eeeeff">    <a href="file:///D:/progettodireti/api/help-doc.html"><font class="NavBarFont1"><b>Help</b></font></a>&nbsp;</td>
  </tr>
</tbody></table>
</td>
<td rowspan="3" align="right" valign="top"><em>
<b>Java<sup><font size="-2">TM</font></sup>&nbsp;2&nbsp;Platform<br>Std.&nbsp;Ed. v1.4.0</b></em>
</td>
</tr>

<tr>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
&nbsp;<a href="file:///D:/progettodireti/api/java/net/DatagramPacket.html"><b>PREV CLASS</b></a>&nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/DatagramSocketImpl.html"><b>NEXT CLASS</b></a></font></td>
<td class="NavBarCell2" bgcolor="white"><font size="-2">
  <a href="file:///D:/progettodireti/api/index.html" target="_top"><b>FRAMES</b></a>  &nbsp;
&nbsp;<a href="file:///D:/progettodireti/api/java/net/DatagramSocket.html" target="_top"><b>NO FRAMES</b></a>  &nbsp;
&nbsp;
<script>
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>');
  }
  //-->
</script>
<noscript>
<A HREF="../../allclasses-noframe.html" TARGET=""><B>All Classes</B></A>
</noscript>
</font></td>
</tr>
<tr>
<td class="NavBarCell3" valign="top"><font size="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_summary">CONSTR</a>&nbsp;|&nbsp;<a href="#method_summary">METHOD</a></font></td>
<td class="NavBarCell3" valign="top"><font size="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<a href="#constructor_detail">CONSTR</a>&nbsp;|&nbsp;<a href="#method_detail">METHOD</a></font></td>
</tr>
</tbody></table>
<!-- =========== END OF NAVBAR =========== -->

<hr>
<font size="-1"><a href="http://java.sun.com/cgi-bin/bugreport.cgi">Submit a bug or feature</a><br>For further API reference and developer documentation, see <a href="file:///D:/progettodireti/relnotes/devdocs-vs-specs.html">Java 2 SDK SE Developer Documentation</a>.
That documentation contains more detailed, developer-targeted
descriptions, with conceptual overviews, definitions of terms,
workarounds, and working code examples. </font><p><font size="-1">Java, Java 2D, and JDBC are trademarks or registered trademarks of Sun Microsystems, Inc. in the US and other countries.<br>Copyright 1993-2002 Sun Microsystems, Inc. 901 San Antonio Road<br>Palo Alto, California, 94303, U.S.A.  All Rights Reserved.</font>
</p></body></html>